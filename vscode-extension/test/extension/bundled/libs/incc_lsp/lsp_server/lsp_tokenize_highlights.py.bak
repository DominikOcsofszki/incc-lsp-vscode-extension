import re
from dataclasses import dataclass

from ply.lex import Lexer

from incc_lsp.lexer import lexer as LEXER
from incc_lsp.lexer.lexer import *

lexer: Lexer = lex.lex(debug=False)


@dataclass
class TokenInfo:
    id_name: str
    pos: [str, str]
    depth: int

    def __repr__(self):
        return (
            "|" + str(self.id_name) + ":" + str(self.pos) + ":" + str(self.depth) + "|"
        )


def getTokens(data: str) -> list[str]:
    depth = 0
    lexer.input(data)
    all_tok: list[str] = []
    last_line = 0
    last_pos = 0

    while True:
        tok = lexer.token()
        if tok:
            if tok.__dict__.get("lexer"):
                lexmatch = tok.__dict__.get("lexer").__dict__.get("lexmatch")
                all_tok.append(lexmatch)
        if not tok:
            break
    return all_tok


if __name__ == "__main__":
    # get_imports()

    data = "b =123; ca = 1 + c"
    res = getTokens(data)
    ic(res)

if __name__ == "__main__2":
    data = r"""
        {
    f= \-> 100;
    }
    """
    data = r"""{
    y=99;
    f= \-> 100;
    print(f());
    fn= \x -> x ;
    print(fn(5));
    fn2= \x,y,z -> x + y * z;
    print(fn2(123,100,100))
    }
    """
    res = getTokens(data)
    print(res)

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> COMMENT
Rule 2     expression -> NUMBER
Rule 3     sequence -> sequence SEMICOLON expression
Rule 4     sequence -> expression
Rule 5     expression -> LOOP expression DO expression
Rule 6     expression -> expression PLUS expression
Rule 7     expression -> expression MINUS expression
Rule 8     expression -> expression TIMES expression
Rule 9     expression -> expression DIVIDE expression
Rule 10    expression -> expression LT expression
Rule 11    expression -> expression GT expression
Rule 12    expression -> expression LE expression
Rule 13    expression -> expression GE expression
Rule 14    expression -> expression EQS expression
Rule 15    expression -> expression NEQS expression
Rule 16    expression -> expression EQ expression
Rule 17    expression -> expression NEQ expression
Rule 18    expression -> expression AND expression
Rule 19    expression -> expression OR expression
Rule 20    expression -> expression NAND expression
Rule 21    expression -> expression NOR expression
Rule 22    expression -> expression IMP expression
Rule 23    expression -> expression XOR expression
Rule 24    expression -> IDENT
Rule 25    ident_list -> IDENT
Rule 26    ident_list -> IDENT COMMA ident_list
Rule 27    expression -> TRUE
Rule 28    expression -> FALSE
Rule 29    expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
Rule 30    expression -> LBRACE sequence RBRACE
Rule 31    initializer_list -> initializer
Rule 32    initializer_list -> initializer SEMICOLON initializer_list
Rule 33    expression -> assign_expression
Rule 34    assign_expression -> IDENT ASSIGN expression
Rule 35    expression -> STRING
Rule 36    initializer -> member_assign_expression
Rule 37    initializer -> SET member_assign_expression
Rule 38    expression -> WHILE expression DO expression
Rule 39    expr_list -> expression
Rule 40    expr_list -> expression COMMA expr_list
Rule 41    expression -> CHAR
Rule 42    expression -> DO expression WHILE expression
Rule 43    expression -> NOT expression
Rule 44    expression -> PLUS expression
Rule 45    expression -> MINUS expression
Rule 46    expression -> BACKSLASH RIGHT_ARROW expression
Rule 47    expression -> BACKSLASH ident_list RIGHT_ARROW expression
Rule 48    expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
Rule 49    assignment_list -> assign_expression
Rule 50    assignment_list -> assign_expression COMMA assignment_list
Rule 51    expression -> LBRACKET RBRACKET
Rule 52    expression -> LBRACKET expr_list RBRACKET
Rule 53    expression -> IF expression THEN expression
Rule 54    expression -> IF expression THEN expression ELSE expression
Rule 55    expression -> expression LBRACKET expression RBRACKET
Rule 56    expression -> STRUCT LBRACE RBRACE
Rule 57    expression -> STRUCT LBRACE initializer_list RBRACE
Rule 58    expression -> LOCK ident_list IN expression
Rule 59    expression -> LPAREN expression RPAREN
Rule 60    expression -> FUN IDENT RIGHT_ARROW expression
Rule 61    expression -> FUN IDENT ident_list RIGHT_ARROW expression
Rule 62    expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
Rule 63    expression -> LOCAL assignment_list IN expression
Rule 64    expression -> EXTEND expression LBRACE RBRACE
Rule 65    expression -> EXTEND expression LBRACE initializer_list RBRACE
Rule 66    dots -> DOT
Rule 67    dots -> DOT dots
Rule 68    expression -> dots IDENT
Rule 69    expression -> expression dots IDENT
Rule 70    expression -> expression LPAREN RPAREN
Rule 71    expression -> expression LPAREN expr_list RPAREN
Rule 72    expression -> member_assign_expression
Rule 73    member_assign_expression -> dots IDENT ASSIGN expression
Rule 74    expression -> THIS

Terminals, with rules where they appear

AND                  : 18
ASSIGN               : 34 73
BACKSLASH            : 46 47 48
CHAR                 : 41
COMMA                : 26 40 50
COMMENT              : 1
DIVIDE               : 9
DO                   : 5 29 38 42
DOT                  : 48 48 48 62 62 62 66 67
ELSE                 : 54
EQ                   : 16
EQS                  : 14
EXTEND               : 64 65
FALSE                : 28
FOR                  : 29
FUN                  : 60 61 62
GE                   : 13
GT                   : 11
IDENT                : 24 25 26 34 60 61 62 68 69 73
IF                   : 53 54
IMP                  : 22
IN                   : 58 63
LBRACE               : 30 56 57 64 65
LBRACKET             : 51 52 55
LE                   : 12
LOCAL                : 63
LOCK                 : 58
LOOP                 : 5
LPAREN               : 59 70 71
LT                   : 10
MINUS                : 7 45
NAND                 : 20
NEQ                  : 17
NEQS                 : 15
NOR                  : 21
NOT                  : 43
NUMBER               : 2
OR                   : 19
PLUS                 : 6 44
RBRACE               : 30 56 57 64 65
RBRACKET             : 51 52 55
RIGHT_ARROW          : 46 47 48 60 61 62
RPAREN               : 59 70 71
SEMICOLON            : 3 29 29 32
SET                  : 37
STRING               : 35
STRUCT               : 56 57
THEN                 : 53 54
THIS                 : 74
TIMES                : 8
TRUE                 : 27
WHILE                : 38 42
XOR                  : 23
error                : 

Nonterminals, with rules where they appear

assign_expression    : 29 29 33 49 50
assignment_list      : 50 63
dots                 : 67 68 69 73
expr_list            : 40 52 71
expression           : 3 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 29 29 34 38 38 39 40 42 42 43 44 45 46 47 48 53 53 54 54 54 55 55 58 59 60 61 62 63 64 65 69 70 71 73 0
ident_list           : 26 47 48 58 61 62
initializer          : 31 32
initializer_list     : 32 57 65
member_assign_expression : 36 37 72
sequence             : 3 30

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 1
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 1

    (0) S' -> expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 2

    (1) expression -> COMMENT .

    PLUS            reduce using rule 1 (expression -> COMMENT .)
    MINUS           reduce using rule 1 (expression -> COMMENT .)
    TIMES           reduce using rule 1 (expression -> COMMENT .)
    DIVIDE          reduce using rule 1 (expression -> COMMENT .)
    LT              reduce using rule 1 (expression -> COMMENT .)
    GT              reduce using rule 1 (expression -> COMMENT .)
    LE              reduce using rule 1 (expression -> COMMENT .)
    GE              reduce using rule 1 (expression -> COMMENT .)
    EQS             reduce using rule 1 (expression -> COMMENT .)
    NEQS            reduce using rule 1 (expression -> COMMENT .)
    EQ              reduce using rule 1 (expression -> COMMENT .)
    NEQ             reduce using rule 1 (expression -> COMMENT .)
    AND             reduce using rule 1 (expression -> COMMENT .)
    OR              reduce using rule 1 (expression -> COMMENT .)
    NAND            reduce using rule 1 (expression -> COMMENT .)
    NOR             reduce using rule 1 (expression -> COMMENT .)
    IMP             reduce using rule 1 (expression -> COMMENT .)
    XOR             reduce using rule 1 (expression -> COMMENT .)
    LBRACKET        reduce using rule 1 (expression -> COMMENT .)
    LPAREN          reduce using rule 1 (expression -> COMMENT .)
    DOT             reduce using rule 1 (expression -> COMMENT .)
    $end            reduce using rule 1 (expression -> COMMENT .)
    DO              reduce using rule 1 (expression -> COMMENT .)
    WHILE           reduce using rule 1 (expression -> COMMENT .)
    RBRACE          reduce using rule 1 (expression -> COMMENT .)
    SEMICOLON       reduce using rule 1 (expression -> COMMENT .)
    COMMA           reduce using rule 1 (expression -> COMMENT .)
    RBRACKET        reduce using rule 1 (expression -> COMMENT .)
    THEN            reduce using rule 1 (expression -> COMMENT .)
    RPAREN          reduce using rule 1 (expression -> COMMENT .)
    LBRACE          reduce using rule 1 (expression -> COMMENT .)
    IN              reduce using rule 1 (expression -> COMMENT .)
    ELSE            reduce using rule 1 (expression -> COMMENT .)


state 3

    (2) expression -> NUMBER .

    PLUS            reduce using rule 2 (expression -> NUMBER .)
    MINUS           reduce using rule 2 (expression -> NUMBER .)
    TIMES           reduce using rule 2 (expression -> NUMBER .)
    DIVIDE          reduce using rule 2 (expression -> NUMBER .)
    LT              reduce using rule 2 (expression -> NUMBER .)
    GT              reduce using rule 2 (expression -> NUMBER .)
    LE              reduce using rule 2 (expression -> NUMBER .)
    GE              reduce using rule 2 (expression -> NUMBER .)
    EQS             reduce using rule 2 (expression -> NUMBER .)
    NEQS            reduce using rule 2 (expression -> NUMBER .)
    EQ              reduce using rule 2 (expression -> NUMBER .)
    NEQ             reduce using rule 2 (expression -> NUMBER .)
    AND             reduce using rule 2 (expression -> NUMBER .)
    OR              reduce using rule 2 (expression -> NUMBER .)
    NAND            reduce using rule 2 (expression -> NUMBER .)
    NOR             reduce using rule 2 (expression -> NUMBER .)
    IMP             reduce using rule 2 (expression -> NUMBER .)
    XOR             reduce using rule 2 (expression -> NUMBER .)
    LBRACKET        reduce using rule 2 (expression -> NUMBER .)
    LPAREN          reduce using rule 2 (expression -> NUMBER .)
    DOT             reduce using rule 2 (expression -> NUMBER .)
    $end            reduce using rule 2 (expression -> NUMBER .)
    DO              reduce using rule 2 (expression -> NUMBER .)
    WHILE           reduce using rule 2 (expression -> NUMBER .)
    RBRACE          reduce using rule 2 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 2 (expression -> NUMBER .)
    COMMA           reduce using rule 2 (expression -> NUMBER .)
    RBRACKET        reduce using rule 2 (expression -> NUMBER .)
    THEN            reduce using rule 2 (expression -> NUMBER .)
    RPAREN          reduce using rule 2 (expression -> NUMBER .)
    LBRACE          reduce using rule 2 (expression -> NUMBER .)
    IN              reduce using rule 2 (expression -> NUMBER .)
    ELSE            reduce using rule 2 (expression -> NUMBER .)


state 4

    (5) expression -> LOOP . expression DO expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 52
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 5

    (42) expression -> DO . expression WHILE expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 53
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 6

    (44) expression -> PLUS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 54
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 7

    (45) expression -> MINUS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 55
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 8

    (24) expression -> IDENT .
    (34) assign_expression -> IDENT . ASSIGN expression

    PLUS            reduce using rule 24 (expression -> IDENT .)
    MINUS           reduce using rule 24 (expression -> IDENT .)
    TIMES           reduce using rule 24 (expression -> IDENT .)
    DIVIDE          reduce using rule 24 (expression -> IDENT .)
    LT              reduce using rule 24 (expression -> IDENT .)
    GT              reduce using rule 24 (expression -> IDENT .)
    LE              reduce using rule 24 (expression -> IDENT .)
    GE              reduce using rule 24 (expression -> IDENT .)
    EQS             reduce using rule 24 (expression -> IDENT .)
    NEQS            reduce using rule 24 (expression -> IDENT .)
    EQ              reduce using rule 24 (expression -> IDENT .)
    NEQ             reduce using rule 24 (expression -> IDENT .)
    AND             reduce using rule 24 (expression -> IDENT .)
    OR              reduce using rule 24 (expression -> IDENT .)
    NAND            reduce using rule 24 (expression -> IDENT .)
    NOR             reduce using rule 24 (expression -> IDENT .)
    IMP             reduce using rule 24 (expression -> IDENT .)
    XOR             reduce using rule 24 (expression -> IDENT .)
    LBRACKET        reduce using rule 24 (expression -> IDENT .)
    LPAREN          reduce using rule 24 (expression -> IDENT .)
    DOT             reduce using rule 24 (expression -> IDENT .)
    $end            reduce using rule 24 (expression -> IDENT .)
    DO              reduce using rule 24 (expression -> IDENT .)
    WHILE           reduce using rule 24 (expression -> IDENT .)
    RBRACE          reduce using rule 24 (expression -> IDENT .)
    SEMICOLON       reduce using rule 24 (expression -> IDENT .)
    COMMA           reduce using rule 24 (expression -> IDENT .)
    RBRACKET        reduce using rule 24 (expression -> IDENT .)
    THEN            reduce using rule 24 (expression -> IDENT .)
    RPAREN          reduce using rule 24 (expression -> IDENT .)
    LBRACE          reduce using rule 24 (expression -> IDENT .)
    IN              reduce using rule 24 (expression -> IDENT .)
    ELSE            reduce using rule 24 (expression -> IDENT .)
    ASSIGN          shift and go to state 56


state 9

    (27) expression -> TRUE .

    PLUS            reduce using rule 27 (expression -> TRUE .)
    MINUS           reduce using rule 27 (expression -> TRUE .)
    TIMES           reduce using rule 27 (expression -> TRUE .)
    DIVIDE          reduce using rule 27 (expression -> TRUE .)
    LT              reduce using rule 27 (expression -> TRUE .)
    GT              reduce using rule 27 (expression -> TRUE .)
    LE              reduce using rule 27 (expression -> TRUE .)
    GE              reduce using rule 27 (expression -> TRUE .)
    EQS             reduce using rule 27 (expression -> TRUE .)
    NEQS            reduce using rule 27 (expression -> TRUE .)
    EQ              reduce using rule 27 (expression -> TRUE .)
    NEQ             reduce using rule 27 (expression -> TRUE .)
    AND             reduce using rule 27 (expression -> TRUE .)
    OR              reduce using rule 27 (expression -> TRUE .)
    NAND            reduce using rule 27 (expression -> TRUE .)
    NOR             reduce using rule 27 (expression -> TRUE .)
    IMP             reduce using rule 27 (expression -> TRUE .)
    XOR             reduce using rule 27 (expression -> TRUE .)
    LBRACKET        reduce using rule 27 (expression -> TRUE .)
    LPAREN          reduce using rule 27 (expression -> TRUE .)
    DOT             reduce using rule 27 (expression -> TRUE .)
    $end            reduce using rule 27 (expression -> TRUE .)
    DO              reduce using rule 27 (expression -> TRUE .)
    WHILE           reduce using rule 27 (expression -> TRUE .)
    RBRACE          reduce using rule 27 (expression -> TRUE .)
    SEMICOLON       reduce using rule 27 (expression -> TRUE .)
    COMMA           reduce using rule 27 (expression -> TRUE .)
    RBRACKET        reduce using rule 27 (expression -> TRUE .)
    THEN            reduce using rule 27 (expression -> TRUE .)
    RPAREN          reduce using rule 27 (expression -> TRUE .)
    LBRACE          reduce using rule 27 (expression -> TRUE .)
    IN              reduce using rule 27 (expression -> TRUE .)
    ELSE            reduce using rule 27 (expression -> TRUE .)


state 10

    (28) expression -> FALSE .

    PLUS            reduce using rule 28 (expression -> FALSE .)
    MINUS           reduce using rule 28 (expression -> FALSE .)
    TIMES           reduce using rule 28 (expression -> FALSE .)
    DIVIDE          reduce using rule 28 (expression -> FALSE .)
    LT              reduce using rule 28 (expression -> FALSE .)
    GT              reduce using rule 28 (expression -> FALSE .)
    LE              reduce using rule 28 (expression -> FALSE .)
    GE              reduce using rule 28 (expression -> FALSE .)
    EQS             reduce using rule 28 (expression -> FALSE .)
    NEQS            reduce using rule 28 (expression -> FALSE .)
    EQ              reduce using rule 28 (expression -> FALSE .)
    NEQ             reduce using rule 28 (expression -> FALSE .)
    AND             reduce using rule 28 (expression -> FALSE .)
    OR              reduce using rule 28 (expression -> FALSE .)
    NAND            reduce using rule 28 (expression -> FALSE .)
    NOR             reduce using rule 28 (expression -> FALSE .)
    IMP             reduce using rule 28 (expression -> FALSE .)
    XOR             reduce using rule 28 (expression -> FALSE .)
    LBRACKET        reduce using rule 28 (expression -> FALSE .)
    LPAREN          reduce using rule 28 (expression -> FALSE .)
    DOT             reduce using rule 28 (expression -> FALSE .)
    $end            reduce using rule 28 (expression -> FALSE .)
    DO              reduce using rule 28 (expression -> FALSE .)
    WHILE           reduce using rule 28 (expression -> FALSE .)
    RBRACE          reduce using rule 28 (expression -> FALSE .)
    SEMICOLON       reduce using rule 28 (expression -> FALSE .)
    COMMA           reduce using rule 28 (expression -> FALSE .)
    RBRACKET        reduce using rule 28 (expression -> FALSE .)
    THEN            reduce using rule 28 (expression -> FALSE .)
    RPAREN          reduce using rule 28 (expression -> FALSE .)
    LBRACE          reduce using rule 28 (expression -> FALSE .)
    IN              reduce using rule 28 (expression -> FALSE .)
    ELSE            reduce using rule 28 (expression -> FALSE .)


state 11

    (29) expression -> FOR . assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (34) assign_expression -> . IDENT ASSIGN expression

    IDENT           shift and go to state 58

    assign_expression              shift and go to state 57

state 12

    (33) expression -> assign_expression .

    PLUS            reduce using rule 33 (expression -> assign_expression .)
    MINUS           reduce using rule 33 (expression -> assign_expression .)
    TIMES           reduce using rule 33 (expression -> assign_expression .)
    DIVIDE          reduce using rule 33 (expression -> assign_expression .)
    LT              reduce using rule 33 (expression -> assign_expression .)
    GT              reduce using rule 33 (expression -> assign_expression .)
    LE              reduce using rule 33 (expression -> assign_expression .)
    GE              reduce using rule 33 (expression -> assign_expression .)
    EQS             reduce using rule 33 (expression -> assign_expression .)
    NEQS            reduce using rule 33 (expression -> assign_expression .)
    EQ              reduce using rule 33 (expression -> assign_expression .)
    NEQ             reduce using rule 33 (expression -> assign_expression .)
    AND             reduce using rule 33 (expression -> assign_expression .)
    OR              reduce using rule 33 (expression -> assign_expression .)
    NAND            reduce using rule 33 (expression -> assign_expression .)
    NOR             reduce using rule 33 (expression -> assign_expression .)
    IMP             reduce using rule 33 (expression -> assign_expression .)
    XOR             reduce using rule 33 (expression -> assign_expression .)
    LBRACKET        reduce using rule 33 (expression -> assign_expression .)
    LPAREN          reduce using rule 33 (expression -> assign_expression .)
    DOT             reduce using rule 33 (expression -> assign_expression .)
    $end            reduce using rule 33 (expression -> assign_expression .)
    DO              reduce using rule 33 (expression -> assign_expression .)
    WHILE           reduce using rule 33 (expression -> assign_expression .)
    RBRACE          reduce using rule 33 (expression -> assign_expression .)
    SEMICOLON       reduce using rule 33 (expression -> assign_expression .)
    COMMA           reduce using rule 33 (expression -> assign_expression .)
    RBRACKET        reduce using rule 33 (expression -> assign_expression .)
    THEN            reduce using rule 33 (expression -> assign_expression .)
    RPAREN          reduce using rule 33 (expression -> assign_expression .)
    LBRACE          reduce using rule 33 (expression -> assign_expression .)
    IN              reduce using rule 33 (expression -> assign_expression .)
    ELSE            reduce using rule 33 (expression -> assign_expression .)


state 13

    (30) expression -> LBRACE . sequence RBRACE
    (3) sequence -> . sequence SEMICOLON expression
    (4) sequence -> . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    sequence                       shift and go to state 59
    expression                     shift and go to state 60
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 14

    (35) expression -> STRING .

    PLUS            reduce using rule 35 (expression -> STRING .)
    MINUS           reduce using rule 35 (expression -> STRING .)
    TIMES           reduce using rule 35 (expression -> STRING .)
    DIVIDE          reduce using rule 35 (expression -> STRING .)
    LT              reduce using rule 35 (expression -> STRING .)
    GT              reduce using rule 35 (expression -> STRING .)
    LE              reduce using rule 35 (expression -> STRING .)
    GE              reduce using rule 35 (expression -> STRING .)
    EQS             reduce using rule 35 (expression -> STRING .)
    NEQS            reduce using rule 35 (expression -> STRING .)
    EQ              reduce using rule 35 (expression -> STRING .)
    NEQ             reduce using rule 35 (expression -> STRING .)
    AND             reduce using rule 35 (expression -> STRING .)
    OR              reduce using rule 35 (expression -> STRING .)
    NAND            reduce using rule 35 (expression -> STRING .)
    NOR             reduce using rule 35 (expression -> STRING .)
    IMP             reduce using rule 35 (expression -> STRING .)
    XOR             reduce using rule 35 (expression -> STRING .)
    LBRACKET        reduce using rule 35 (expression -> STRING .)
    LPAREN          reduce using rule 35 (expression -> STRING .)
    DOT             reduce using rule 35 (expression -> STRING .)
    $end            reduce using rule 35 (expression -> STRING .)
    DO              reduce using rule 35 (expression -> STRING .)
    WHILE           reduce using rule 35 (expression -> STRING .)
    RBRACE          reduce using rule 35 (expression -> STRING .)
    SEMICOLON       reduce using rule 35 (expression -> STRING .)
    COMMA           reduce using rule 35 (expression -> STRING .)
    RBRACKET        reduce using rule 35 (expression -> STRING .)
    THEN            reduce using rule 35 (expression -> STRING .)
    RPAREN          reduce using rule 35 (expression -> STRING .)
    LBRACE          reduce using rule 35 (expression -> STRING .)
    IN              reduce using rule 35 (expression -> STRING .)
    ELSE            reduce using rule 35 (expression -> STRING .)


state 15

    (38) expression -> WHILE . expression DO expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 61
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 16

    (41) expression -> CHAR .

    PLUS            reduce using rule 41 (expression -> CHAR .)
    MINUS           reduce using rule 41 (expression -> CHAR .)
    TIMES           reduce using rule 41 (expression -> CHAR .)
    DIVIDE          reduce using rule 41 (expression -> CHAR .)
    LT              reduce using rule 41 (expression -> CHAR .)
    GT              reduce using rule 41 (expression -> CHAR .)
    LE              reduce using rule 41 (expression -> CHAR .)
    GE              reduce using rule 41 (expression -> CHAR .)
    EQS             reduce using rule 41 (expression -> CHAR .)
    NEQS            reduce using rule 41 (expression -> CHAR .)
    EQ              reduce using rule 41 (expression -> CHAR .)
    NEQ             reduce using rule 41 (expression -> CHAR .)
    AND             reduce using rule 41 (expression -> CHAR .)
    OR              reduce using rule 41 (expression -> CHAR .)
    NAND            reduce using rule 41 (expression -> CHAR .)
    NOR             reduce using rule 41 (expression -> CHAR .)
    IMP             reduce using rule 41 (expression -> CHAR .)
    XOR             reduce using rule 41 (expression -> CHAR .)
    LBRACKET        reduce using rule 41 (expression -> CHAR .)
    LPAREN          reduce using rule 41 (expression -> CHAR .)
    DOT             reduce using rule 41 (expression -> CHAR .)
    $end            reduce using rule 41 (expression -> CHAR .)
    DO              reduce using rule 41 (expression -> CHAR .)
    WHILE           reduce using rule 41 (expression -> CHAR .)
    RBRACE          reduce using rule 41 (expression -> CHAR .)
    SEMICOLON       reduce using rule 41 (expression -> CHAR .)
    COMMA           reduce using rule 41 (expression -> CHAR .)
    RBRACKET        reduce using rule 41 (expression -> CHAR .)
    THEN            reduce using rule 41 (expression -> CHAR .)
    RPAREN          reduce using rule 41 (expression -> CHAR .)
    LBRACE          reduce using rule 41 (expression -> CHAR .)
    IN              reduce using rule 41 (expression -> CHAR .)
    ELSE            reduce using rule 41 (expression -> CHAR .)


state 17

    (43) expression -> NOT . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 62
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 18

    (46) expression -> BACKSLASH . RIGHT_ARROW expression
    (47) expression -> BACKSLASH . ident_list RIGHT_ARROW expression
    (48) expression -> BACKSLASH . ident_list DOT DOT DOT RIGHT_ARROW expression
    (25) ident_list -> . IDENT
    (26) ident_list -> . IDENT COMMA ident_list

    RIGHT_ARROW     shift and go to state 63
    IDENT           shift and go to state 65

    ident_list                     shift and go to state 64

state 19

    (66) dots -> DOT .
    (67) dots -> DOT . dots
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    IDENT           reduce using rule 66 (dots -> DOT .)
    DOT             shift and go to state 19

    dots                           shift and go to state 66

state 20

    (51) expression -> LBRACKET . RBRACKET
    (52) expression -> LBRACKET . expr_list RBRACKET
    (39) expr_list -> . expression
    (40) expr_list -> . expression COMMA expr_list
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    RBRACKET        shift and go to state 67
    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expr_list                      shift and go to state 68
    expression                     shift and go to state 69
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 21

    (53) expression -> IF . expression THEN expression
    (54) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 70
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 22

    (56) expression -> STRUCT . LBRACE RBRACE
    (57) expression -> STRUCT . LBRACE initializer_list RBRACE

    LBRACE          shift and go to state 71


state 23

    (58) expression -> LOCK . ident_list IN expression
    (25) ident_list -> . IDENT
    (26) ident_list -> . IDENT COMMA ident_list

    IDENT           shift and go to state 65

    ident_list                     shift and go to state 72

state 24

    (59) expression -> LPAREN . expression RPAREN
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 73
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 25

    (60) expression -> FUN . IDENT RIGHT_ARROW expression
    (61) expression -> FUN . IDENT ident_list RIGHT_ARROW expression
    (62) expression -> FUN . IDENT ident_list DOT DOT DOT RIGHT_ARROW expression

    IDENT           shift and go to state 74


state 26

    (63) expression -> LOCAL . assignment_list IN expression
    (49) assignment_list -> . assign_expression
    (50) assignment_list -> . assign_expression COMMA assignment_list
    (34) assign_expression -> . IDENT ASSIGN expression

    IDENT           shift and go to state 58

    assignment_list                shift and go to state 75
    assign_expression              shift and go to state 76

state 27

    (64) expression -> EXTEND . expression LBRACE RBRACE
    (65) expression -> EXTEND . expression LBRACE initializer_list RBRACE
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 77
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 28

    (68) expression -> dots . IDENT
    (73) member_assign_expression -> dots . IDENT ASSIGN expression

    IDENT           shift and go to state 78


state 29

    (72) expression -> member_assign_expression .

    PLUS            reduce using rule 72 (expression -> member_assign_expression .)
    MINUS           reduce using rule 72 (expression -> member_assign_expression .)
    TIMES           reduce using rule 72 (expression -> member_assign_expression .)
    DIVIDE          reduce using rule 72 (expression -> member_assign_expression .)
    LT              reduce using rule 72 (expression -> member_assign_expression .)
    GT              reduce using rule 72 (expression -> member_assign_expression .)
    LE              reduce using rule 72 (expression -> member_assign_expression .)
    GE              reduce using rule 72 (expression -> member_assign_expression .)
    EQS             reduce using rule 72 (expression -> member_assign_expression .)
    NEQS            reduce using rule 72 (expression -> member_assign_expression .)
    EQ              reduce using rule 72 (expression -> member_assign_expression .)
    NEQ             reduce using rule 72 (expression -> member_assign_expression .)
    AND             reduce using rule 72 (expression -> member_assign_expression .)
    OR              reduce using rule 72 (expression -> member_assign_expression .)
    NAND            reduce using rule 72 (expression -> member_assign_expression .)
    NOR             reduce using rule 72 (expression -> member_assign_expression .)
    IMP             reduce using rule 72 (expression -> member_assign_expression .)
    XOR             reduce using rule 72 (expression -> member_assign_expression .)
    LBRACKET        reduce using rule 72 (expression -> member_assign_expression .)
    LPAREN          reduce using rule 72 (expression -> member_assign_expression .)
    DOT             reduce using rule 72 (expression -> member_assign_expression .)
    $end            reduce using rule 72 (expression -> member_assign_expression .)
    DO              reduce using rule 72 (expression -> member_assign_expression .)
    WHILE           reduce using rule 72 (expression -> member_assign_expression .)
    RBRACE          reduce using rule 72 (expression -> member_assign_expression .)
    SEMICOLON       reduce using rule 72 (expression -> member_assign_expression .)
    COMMA           reduce using rule 72 (expression -> member_assign_expression .)
    RBRACKET        reduce using rule 72 (expression -> member_assign_expression .)
    THEN            reduce using rule 72 (expression -> member_assign_expression .)
    RPAREN          reduce using rule 72 (expression -> member_assign_expression .)
    LBRACE          reduce using rule 72 (expression -> member_assign_expression .)
    IN              reduce using rule 72 (expression -> member_assign_expression .)
    ELSE            reduce using rule 72 (expression -> member_assign_expression .)


state 30

    (74) expression -> THIS .

    PLUS            reduce using rule 74 (expression -> THIS .)
    MINUS           reduce using rule 74 (expression -> THIS .)
    TIMES           reduce using rule 74 (expression -> THIS .)
    DIVIDE          reduce using rule 74 (expression -> THIS .)
    LT              reduce using rule 74 (expression -> THIS .)
    GT              reduce using rule 74 (expression -> THIS .)
    LE              reduce using rule 74 (expression -> THIS .)
    GE              reduce using rule 74 (expression -> THIS .)
    EQS             reduce using rule 74 (expression -> THIS .)
    NEQS            reduce using rule 74 (expression -> THIS .)
    EQ              reduce using rule 74 (expression -> THIS .)
    NEQ             reduce using rule 74 (expression -> THIS .)
    AND             reduce using rule 74 (expression -> THIS .)
    OR              reduce using rule 74 (expression -> THIS .)
    NAND            reduce using rule 74 (expression -> THIS .)
    NOR             reduce using rule 74 (expression -> THIS .)
    IMP             reduce using rule 74 (expression -> THIS .)
    XOR             reduce using rule 74 (expression -> THIS .)
    LBRACKET        reduce using rule 74 (expression -> THIS .)
    LPAREN          reduce using rule 74 (expression -> THIS .)
    DOT             reduce using rule 74 (expression -> THIS .)
    $end            reduce using rule 74 (expression -> THIS .)
    DO              reduce using rule 74 (expression -> THIS .)
    WHILE           reduce using rule 74 (expression -> THIS .)
    RBRACE          reduce using rule 74 (expression -> THIS .)
    SEMICOLON       reduce using rule 74 (expression -> THIS .)
    COMMA           reduce using rule 74 (expression -> THIS .)
    RBRACKET        reduce using rule 74 (expression -> THIS .)
    THEN            reduce using rule 74 (expression -> THIS .)
    RPAREN          reduce using rule 74 (expression -> THIS .)
    LBRACE          reduce using rule 74 (expression -> THIS .)
    IN              reduce using rule 74 (expression -> THIS .)
    ELSE            reduce using rule 74 (expression -> THIS .)


state 31

    (6) expression -> expression PLUS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 79
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 32

    (7) expression -> expression MINUS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 80
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 33

    (8) expression -> expression TIMES . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 81
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 34

    (9) expression -> expression DIVIDE . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 82
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 35

    (10) expression -> expression LT . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 83
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 36

    (11) expression -> expression GT . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 84
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 37

    (12) expression -> expression LE . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 85
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 38

    (13) expression -> expression GE . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 86
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 39

    (14) expression -> expression EQS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 87
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 40

    (15) expression -> expression NEQS . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 88
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 41

    (16) expression -> expression EQ . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 89
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 42

    (17) expression -> expression NEQ . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 90
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 43

    (18) expression -> expression AND . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 91
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 44

    (19) expression -> expression OR . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 92
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 45

    (20) expression -> expression NAND . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 93
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 46

    (21) expression -> expression NOR . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 94
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 47

    (22) expression -> expression IMP . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 95
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 48

    (23) expression -> expression XOR . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 96
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 49

    (55) expression -> expression LBRACKET . expression RBRACKET
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 97
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 50

    (69) expression -> expression dots . IDENT

    IDENT           shift and go to state 98


state 51

    (70) expression -> expression LPAREN . RPAREN
    (71) expression -> expression LPAREN . expr_list RPAREN
    (39) expr_list -> . expression
    (40) expr_list -> . expression COMMA expr_list
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    RPAREN          shift and go to state 99
    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 69
    expr_list                      shift and go to state 100
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 52

    (5) expression -> LOOP expression . DO expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    DO              shift and go to state 101
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 53

    (42) expression -> DO expression . WHILE expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    WHILE           shift and go to state 102
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 54

    (44) expression -> PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 44 (expression -> PLUS expression .)
    MINUS           reduce using rule 44 (expression -> PLUS expression .)
    TIMES           reduce using rule 44 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 44 (expression -> PLUS expression .)
    LT              reduce using rule 44 (expression -> PLUS expression .)
    GT              reduce using rule 44 (expression -> PLUS expression .)
    LE              reduce using rule 44 (expression -> PLUS expression .)
    GE              reduce using rule 44 (expression -> PLUS expression .)
    EQS             reduce using rule 44 (expression -> PLUS expression .)
    NEQS            reduce using rule 44 (expression -> PLUS expression .)
    EQ              reduce using rule 44 (expression -> PLUS expression .)
    NEQ             reduce using rule 44 (expression -> PLUS expression .)
    AND             reduce using rule 44 (expression -> PLUS expression .)
    OR              reduce using rule 44 (expression -> PLUS expression .)
    NAND            reduce using rule 44 (expression -> PLUS expression .)
    NOR             reduce using rule 44 (expression -> PLUS expression .)
    IMP             reduce using rule 44 (expression -> PLUS expression .)
    XOR             reduce using rule 44 (expression -> PLUS expression .)
    $end            reduce using rule 44 (expression -> PLUS expression .)
    DO              reduce using rule 44 (expression -> PLUS expression .)
    WHILE           reduce using rule 44 (expression -> PLUS expression .)
    RBRACE          reduce using rule 44 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 44 (expression -> PLUS expression .)
    COMMA           reduce using rule 44 (expression -> PLUS expression .)
    RBRACKET        reduce using rule 44 (expression -> PLUS expression .)
    THEN            reduce using rule 44 (expression -> PLUS expression .)
    RPAREN          reduce using rule 44 (expression -> PLUS expression .)
    LBRACE          reduce using rule 44 (expression -> PLUS expression .)
    IN              reduce using rule 44 (expression -> PLUS expression .)
    ELSE            reduce using rule 44 (expression -> PLUS expression .)
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! LBRACKET        [ reduce using rule 44 (expression -> PLUS expression .) ]
  ! LPAREN          [ reduce using rule 44 (expression -> PLUS expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 55

    (45) expression -> MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 45 (expression -> MINUS expression .)
    MINUS           reduce using rule 45 (expression -> MINUS expression .)
    TIMES           reduce using rule 45 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 45 (expression -> MINUS expression .)
    LT              reduce using rule 45 (expression -> MINUS expression .)
    GT              reduce using rule 45 (expression -> MINUS expression .)
    LE              reduce using rule 45 (expression -> MINUS expression .)
    GE              reduce using rule 45 (expression -> MINUS expression .)
    EQS             reduce using rule 45 (expression -> MINUS expression .)
    NEQS            reduce using rule 45 (expression -> MINUS expression .)
    EQ              reduce using rule 45 (expression -> MINUS expression .)
    NEQ             reduce using rule 45 (expression -> MINUS expression .)
    AND             reduce using rule 45 (expression -> MINUS expression .)
    OR              reduce using rule 45 (expression -> MINUS expression .)
    NAND            reduce using rule 45 (expression -> MINUS expression .)
    NOR             reduce using rule 45 (expression -> MINUS expression .)
    IMP             reduce using rule 45 (expression -> MINUS expression .)
    XOR             reduce using rule 45 (expression -> MINUS expression .)
    $end            reduce using rule 45 (expression -> MINUS expression .)
    DO              reduce using rule 45 (expression -> MINUS expression .)
    WHILE           reduce using rule 45 (expression -> MINUS expression .)
    RBRACE          reduce using rule 45 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> MINUS expression .)
    COMMA           reduce using rule 45 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 45 (expression -> MINUS expression .)
    THEN            reduce using rule 45 (expression -> MINUS expression .)
    RPAREN          reduce using rule 45 (expression -> MINUS expression .)
    LBRACE          reduce using rule 45 (expression -> MINUS expression .)
    IN              reduce using rule 45 (expression -> MINUS expression .)
    ELSE            reduce using rule 45 (expression -> MINUS expression .)
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! LBRACKET        [ reduce using rule 45 (expression -> MINUS expression .) ]
  ! LPAREN          [ reduce using rule 45 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 56

    (34) assign_expression -> IDENT ASSIGN . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 103
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 57

    (29) expression -> FOR assign_expression . SEMICOLON expression SEMICOLON assign_expression DO expression

    SEMICOLON       shift and go to state 104


state 58

    (34) assign_expression -> IDENT . ASSIGN expression

    ASSIGN          shift and go to state 56


state 59

    (30) expression -> LBRACE sequence . RBRACE
    (3) sequence -> sequence . SEMICOLON expression

    RBRACE          shift and go to state 105
    SEMICOLON       shift and go to state 106


state 60

    (4) sequence -> expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACE          reduce using rule 4 (sequence -> expression .)
    SEMICOLON       reduce using rule 4 (sequence -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 61

    (38) expression -> WHILE expression . DO expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    DO              shift and go to state 107
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 62

    (43) expression -> NOT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 43 (expression -> NOT expression .)
    MINUS           reduce using rule 43 (expression -> NOT expression .)
    TIMES           reduce using rule 43 (expression -> NOT expression .)
    DIVIDE          reduce using rule 43 (expression -> NOT expression .)
    LT              reduce using rule 43 (expression -> NOT expression .)
    GT              reduce using rule 43 (expression -> NOT expression .)
    LE              reduce using rule 43 (expression -> NOT expression .)
    GE              reduce using rule 43 (expression -> NOT expression .)
    EQS             reduce using rule 43 (expression -> NOT expression .)
    NEQS            reduce using rule 43 (expression -> NOT expression .)
    EQ              reduce using rule 43 (expression -> NOT expression .)
    NEQ             reduce using rule 43 (expression -> NOT expression .)
    AND             reduce using rule 43 (expression -> NOT expression .)
    OR              reduce using rule 43 (expression -> NOT expression .)
    NAND            reduce using rule 43 (expression -> NOT expression .)
    NOR             reduce using rule 43 (expression -> NOT expression .)
    IMP             reduce using rule 43 (expression -> NOT expression .)
    XOR             reduce using rule 43 (expression -> NOT expression .)
    $end            reduce using rule 43 (expression -> NOT expression .)
    DO              reduce using rule 43 (expression -> NOT expression .)
    WHILE           reduce using rule 43 (expression -> NOT expression .)
    RBRACE          reduce using rule 43 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 43 (expression -> NOT expression .)
    COMMA           reduce using rule 43 (expression -> NOT expression .)
    RBRACKET        reduce using rule 43 (expression -> NOT expression .)
    THEN            reduce using rule 43 (expression -> NOT expression .)
    RPAREN          reduce using rule 43 (expression -> NOT expression .)
    LBRACE          reduce using rule 43 (expression -> NOT expression .)
    IN              reduce using rule 43 (expression -> NOT expression .)
    ELSE            reduce using rule 43 (expression -> NOT expression .)
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! LBRACKET        [ reduce using rule 43 (expression -> NOT expression .) ]
  ! LPAREN          [ reduce using rule 43 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> NOT expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 63

    (46) expression -> BACKSLASH RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 108
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 64

    (47) expression -> BACKSLASH ident_list . RIGHT_ARROW expression
    (48) expression -> BACKSLASH ident_list . DOT DOT DOT RIGHT_ARROW expression

    RIGHT_ARROW     shift and go to state 109
    DOT             shift and go to state 110


state 65

    (25) ident_list -> IDENT .
    (26) ident_list -> IDENT . COMMA ident_list

    RIGHT_ARROW     reduce using rule 25 (ident_list -> IDENT .)
    DOT             reduce using rule 25 (ident_list -> IDENT .)
    IN              reduce using rule 25 (ident_list -> IDENT .)
    COMMA           shift and go to state 111


state 66

    (67) dots -> DOT dots .

    IDENT           reduce using rule 67 (dots -> DOT dots .)


state 67

    (51) expression -> LBRACKET RBRACKET .

    PLUS            reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    LT              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    GT              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    LE              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    GE              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    EQS             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    NEQS            reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    EQ              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    NEQ             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    AND             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    OR              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    NAND            reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    NOR             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    IMP             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    XOR             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    DOT             reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    $end            reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    DO              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    THEN            reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    IN              reduce using rule 51 (expression -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 51 (expression -> LBRACKET RBRACKET .)


state 68

    (52) expression -> LBRACKET expr_list . RBRACKET

    RBRACKET        shift and go to state 112


state 69

    (39) expr_list -> expression .
    (40) expr_list -> expression . COMMA expr_list
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACKET        reduce using rule 39 (expr_list -> expression .)
    RPAREN          reduce using rule 39 (expr_list -> expression .)
    COMMA           shift and go to state 113
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 70

    (53) expression -> IF expression . THEN expression
    (54) expression -> IF expression . THEN expression ELSE expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    THEN            shift and go to state 114
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 71

    (56) expression -> STRUCT LBRACE . RBRACE
    (57) expression -> STRUCT LBRACE . initializer_list RBRACE
    (31) initializer_list -> . initializer
    (32) initializer_list -> . initializer SEMICOLON initializer_list
    (36) initializer -> . member_assign_expression
    (37) initializer -> . SET member_assign_expression
    (73) member_assign_expression -> . dots IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACE          shift and go to state 115
    SET             shift and go to state 119
    DOT             shift and go to state 19

    initializer_list               shift and go to state 116
    initializer                    shift and go to state 117
    member_assign_expression       shift and go to state 118
    dots                           shift and go to state 120

state 72

    (58) expression -> LOCK ident_list . IN expression

    IN              shift and go to state 121


state 73

    (59) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 74

    (60) expression -> FUN IDENT . RIGHT_ARROW expression
    (61) expression -> FUN IDENT . ident_list RIGHT_ARROW expression
    (62) expression -> FUN IDENT . ident_list DOT DOT DOT RIGHT_ARROW expression
    (25) ident_list -> . IDENT
    (26) ident_list -> . IDENT COMMA ident_list

    RIGHT_ARROW     shift and go to state 123
    IDENT           shift and go to state 65

    ident_list                     shift and go to state 124

state 75

    (63) expression -> LOCAL assignment_list . IN expression

    IN              shift and go to state 125


state 76

    (49) assignment_list -> assign_expression .
    (50) assignment_list -> assign_expression . COMMA assignment_list

    IN              reduce using rule 49 (assignment_list -> assign_expression .)
    COMMA           shift and go to state 126


state 77

    (64) expression -> EXTEND expression . LBRACE RBRACE
    (65) expression -> EXTEND expression . LBRACE initializer_list RBRACE
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    LBRACE          shift and go to state 127
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 78

    (68) expression -> dots IDENT .
    (73) member_assign_expression -> dots IDENT . ASSIGN expression

    PLUS            reduce using rule 68 (expression -> dots IDENT .)
    MINUS           reduce using rule 68 (expression -> dots IDENT .)
    TIMES           reduce using rule 68 (expression -> dots IDENT .)
    DIVIDE          reduce using rule 68 (expression -> dots IDENT .)
    LT              reduce using rule 68 (expression -> dots IDENT .)
    GT              reduce using rule 68 (expression -> dots IDENT .)
    LE              reduce using rule 68 (expression -> dots IDENT .)
    GE              reduce using rule 68 (expression -> dots IDENT .)
    EQS             reduce using rule 68 (expression -> dots IDENT .)
    NEQS            reduce using rule 68 (expression -> dots IDENT .)
    EQ              reduce using rule 68 (expression -> dots IDENT .)
    NEQ             reduce using rule 68 (expression -> dots IDENT .)
    AND             reduce using rule 68 (expression -> dots IDENT .)
    OR              reduce using rule 68 (expression -> dots IDENT .)
    NAND            reduce using rule 68 (expression -> dots IDENT .)
    NOR             reduce using rule 68 (expression -> dots IDENT .)
    IMP             reduce using rule 68 (expression -> dots IDENT .)
    XOR             reduce using rule 68 (expression -> dots IDENT .)
    LBRACKET        reduce using rule 68 (expression -> dots IDENT .)
    LPAREN          reduce using rule 68 (expression -> dots IDENT .)
    DOT             reduce using rule 68 (expression -> dots IDENT .)
    $end            reduce using rule 68 (expression -> dots IDENT .)
    DO              reduce using rule 68 (expression -> dots IDENT .)
    WHILE           reduce using rule 68 (expression -> dots IDENT .)
    RBRACE          reduce using rule 68 (expression -> dots IDENT .)
    SEMICOLON       reduce using rule 68 (expression -> dots IDENT .)
    COMMA           reduce using rule 68 (expression -> dots IDENT .)
    RBRACKET        reduce using rule 68 (expression -> dots IDENT .)
    THEN            reduce using rule 68 (expression -> dots IDENT .)
    RPAREN          reduce using rule 68 (expression -> dots IDENT .)
    LBRACE          reduce using rule 68 (expression -> dots IDENT .)
    IN              reduce using rule 68 (expression -> dots IDENT .)
    ELSE            reduce using rule 68 (expression -> dots IDENT .)
    ASSIGN          shift and go to state 128


state 79

    (6) expression -> expression PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 6 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 6 (expression -> expression PLUS expression .)
    LT              reduce using rule 6 (expression -> expression PLUS expression .)
    GT              reduce using rule 6 (expression -> expression PLUS expression .)
    LE              reduce using rule 6 (expression -> expression PLUS expression .)
    GE              reduce using rule 6 (expression -> expression PLUS expression .)
    EQS             reduce using rule 6 (expression -> expression PLUS expression .)
    NEQS            reduce using rule 6 (expression -> expression PLUS expression .)
    EQ              reduce using rule 6 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 6 (expression -> expression PLUS expression .)
    AND             reduce using rule 6 (expression -> expression PLUS expression .)
    OR              reduce using rule 6 (expression -> expression PLUS expression .)
    NAND            reduce using rule 6 (expression -> expression PLUS expression .)
    NOR             reduce using rule 6 (expression -> expression PLUS expression .)
    IMP             reduce using rule 6 (expression -> expression PLUS expression .)
    XOR             reduce using rule 6 (expression -> expression PLUS expression .)
    $end            reduce using rule 6 (expression -> expression PLUS expression .)
    DO              reduce using rule 6 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 6 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 6 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 6 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 6 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 6 (expression -> expression PLUS expression .)
    THEN            reduce using rule 6 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 6 (expression -> expression PLUS expression .)
    IN              reduce using rule 6 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 6 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! TIMES           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! LPAREN          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 80

    (7) expression -> expression MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 7 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 7 (expression -> expression MINUS expression .)
    LT              reduce using rule 7 (expression -> expression MINUS expression .)
    GT              reduce using rule 7 (expression -> expression MINUS expression .)
    LE              reduce using rule 7 (expression -> expression MINUS expression .)
    GE              reduce using rule 7 (expression -> expression MINUS expression .)
    EQS             reduce using rule 7 (expression -> expression MINUS expression .)
    NEQS            reduce using rule 7 (expression -> expression MINUS expression .)
    EQ              reduce using rule 7 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 7 (expression -> expression MINUS expression .)
    AND             reduce using rule 7 (expression -> expression MINUS expression .)
    OR              reduce using rule 7 (expression -> expression MINUS expression .)
    NAND            reduce using rule 7 (expression -> expression MINUS expression .)
    NOR             reduce using rule 7 (expression -> expression MINUS expression .)
    IMP             reduce using rule 7 (expression -> expression MINUS expression .)
    XOR             reduce using rule 7 (expression -> expression MINUS expression .)
    $end            reduce using rule 7 (expression -> expression MINUS expression .)
    DO              reduce using rule 7 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 7 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 7 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 7 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 7 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 7 (expression -> expression MINUS expression .)
    THEN            reduce using rule 7 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 7 (expression -> expression MINUS expression .)
    IN              reduce using rule 7 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 7 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! TIMES           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 81

    (8) expression -> expression TIMES expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 8 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 8 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 8 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 8 (expression -> expression TIMES expression .)
    LT              reduce using rule 8 (expression -> expression TIMES expression .)
    GT              reduce using rule 8 (expression -> expression TIMES expression .)
    LE              reduce using rule 8 (expression -> expression TIMES expression .)
    GE              reduce using rule 8 (expression -> expression TIMES expression .)
    EQS             reduce using rule 8 (expression -> expression TIMES expression .)
    NEQS            reduce using rule 8 (expression -> expression TIMES expression .)
    EQ              reduce using rule 8 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 8 (expression -> expression TIMES expression .)
    AND             reduce using rule 8 (expression -> expression TIMES expression .)
    OR              reduce using rule 8 (expression -> expression TIMES expression .)
    NAND            reduce using rule 8 (expression -> expression TIMES expression .)
    NOR             reduce using rule 8 (expression -> expression TIMES expression .)
    IMP             reduce using rule 8 (expression -> expression TIMES expression .)
    XOR             reduce using rule 8 (expression -> expression TIMES expression .)
    $end            reduce using rule 8 (expression -> expression TIMES expression .)
    DO              reduce using rule 8 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 8 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 8 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 8 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 8 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 8 (expression -> expression TIMES expression .)
    THEN            reduce using rule 8 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 8 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 8 (expression -> expression TIMES expression .)
    IN              reduce using rule 8 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 8 (expression -> expression TIMES expression .)
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! LBRACKET        [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! LPAREN          [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 82

    (9) expression -> expression DIVIDE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    PLUS            reduce using rule 9 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 9 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 9 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 9 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 9 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 9 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 9 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 9 (expression -> expression DIVIDE expression .)
    EQS             reduce using rule 9 (expression -> expression DIVIDE expression .)
    NEQS            reduce using rule 9 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 9 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 9 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 9 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 9 (expression -> expression DIVIDE expression .)
    NAND            reduce using rule 9 (expression -> expression DIVIDE expression .)
    NOR             reduce using rule 9 (expression -> expression DIVIDE expression .)
    IMP             reduce using rule 9 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 9 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 9 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 9 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 9 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 9 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 9 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 9 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 9 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 9 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 9 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 9 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 9 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 9 (expression -> expression DIVIDE expression .)
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! LBRACKET        [ reduce using rule 9 (expression -> expression DIVIDE expression .) ]
  ! LPAREN          [ reduce using rule 9 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 9 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 31 ]
  ! MINUS           [ shift and go to state 32 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 83

    (10) expression -> expression LT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    LT              reduce using rule 10 (expression -> expression LT expression .)
    GT              reduce using rule 10 (expression -> expression LT expression .)
    LE              reduce using rule 10 (expression -> expression LT expression .)
    GE              reduce using rule 10 (expression -> expression LT expression .)
    EQS             reduce using rule 10 (expression -> expression LT expression .)
    NEQS            reduce using rule 10 (expression -> expression LT expression .)
    EQ              reduce using rule 10 (expression -> expression LT expression .)
    NEQ             reduce using rule 10 (expression -> expression LT expression .)
    AND             reduce using rule 10 (expression -> expression LT expression .)
    OR              reduce using rule 10 (expression -> expression LT expression .)
    NAND            reduce using rule 10 (expression -> expression LT expression .)
    NOR             reduce using rule 10 (expression -> expression LT expression .)
    IMP             reduce using rule 10 (expression -> expression LT expression .)
    XOR             reduce using rule 10 (expression -> expression LT expression .)
    $end            reduce using rule 10 (expression -> expression LT expression .)
    DO              reduce using rule 10 (expression -> expression LT expression .)
    WHILE           reduce using rule 10 (expression -> expression LT expression .)
    RBRACE          reduce using rule 10 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 10 (expression -> expression LT expression .)
    COMMA           reduce using rule 10 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 10 (expression -> expression LT expression .)
    THEN            reduce using rule 10 (expression -> expression LT expression .)
    RPAREN          reduce using rule 10 (expression -> expression LT expression .)
    LBRACE          reduce using rule 10 (expression -> expression LT expression .)
    IN              reduce using rule 10 (expression -> expression LT expression .)
    ELSE            reduce using rule 10 (expression -> expression LT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! LBRACKET        [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! LPAREN          [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 10 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 84

    (11) expression -> expression GT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    LT              reduce using rule 11 (expression -> expression GT expression .)
    GT              reduce using rule 11 (expression -> expression GT expression .)
    LE              reduce using rule 11 (expression -> expression GT expression .)
    GE              reduce using rule 11 (expression -> expression GT expression .)
    EQS             reduce using rule 11 (expression -> expression GT expression .)
    NEQS            reduce using rule 11 (expression -> expression GT expression .)
    EQ              reduce using rule 11 (expression -> expression GT expression .)
    NEQ             reduce using rule 11 (expression -> expression GT expression .)
    AND             reduce using rule 11 (expression -> expression GT expression .)
    OR              reduce using rule 11 (expression -> expression GT expression .)
    NAND            reduce using rule 11 (expression -> expression GT expression .)
    NOR             reduce using rule 11 (expression -> expression GT expression .)
    IMP             reduce using rule 11 (expression -> expression GT expression .)
    XOR             reduce using rule 11 (expression -> expression GT expression .)
    $end            reduce using rule 11 (expression -> expression GT expression .)
    DO              reduce using rule 11 (expression -> expression GT expression .)
    WHILE           reduce using rule 11 (expression -> expression GT expression .)
    RBRACE          reduce using rule 11 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression GT expression .)
    COMMA           reduce using rule 11 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 11 (expression -> expression GT expression .)
    THEN            reduce using rule 11 (expression -> expression GT expression .)
    RPAREN          reduce using rule 11 (expression -> expression GT expression .)
    LBRACE          reduce using rule 11 (expression -> expression GT expression .)
    IN              reduce using rule 11 (expression -> expression GT expression .)
    ELSE            reduce using rule 11 (expression -> expression GT expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! LBRACKET        [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! LPAREN          [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! DOT             [ reduce using rule 11 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 85

    (12) expression -> expression LE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    LT              reduce using rule 12 (expression -> expression LE expression .)
    GT              reduce using rule 12 (expression -> expression LE expression .)
    LE              reduce using rule 12 (expression -> expression LE expression .)
    GE              reduce using rule 12 (expression -> expression LE expression .)
    EQS             reduce using rule 12 (expression -> expression LE expression .)
    NEQS            reduce using rule 12 (expression -> expression LE expression .)
    EQ              reduce using rule 12 (expression -> expression LE expression .)
    NEQ             reduce using rule 12 (expression -> expression LE expression .)
    AND             reduce using rule 12 (expression -> expression LE expression .)
    OR              reduce using rule 12 (expression -> expression LE expression .)
    NAND            reduce using rule 12 (expression -> expression LE expression .)
    NOR             reduce using rule 12 (expression -> expression LE expression .)
    IMP             reduce using rule 12 (expression -> expression LE expression .)
    XOR             reduce using rule 12 (expression -> expression LE expression .)
    $end            reduce using rule 12 (expression -> expression LE expression .)
    DO              reduce using rule 12 (expression -> expression LE expression .)
    WHILE           reduce using rule 12 (expression -> expression LE expression .)
    RBRACE          reduce using rule 12 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression LE expression .)
    COMMA           reduce using rule 12 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 12 (expression -> expression LE expression .)
    THEN            reduce using rule 12 (expression -> expression LE expression .)
    RPAREN          reduce using rule 12 (expression -> expression LE expression .)
    LBRACE          reduce using rule 12 (expression -> expression LE expression .)
    IN              reduce using rule 12 (expression -> expression LE expression .)
    ELSE            reduce using rule 12 (expression -> expression LE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! LBRACKET        [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! LPAREN          [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 12 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 86

    (13) expression -> expression GE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    LT              reduce using rule 13 (expression -> expression GE expression .)
    GT              reduce using rule 13 (expression -> expression GE expression .)
    LE              reduce using rule 13 (expression -> expression GE expression .)
    GE              reduce using rule 13 (expression -> expression GE expression .)
    EQS             reduce using rule 13 (expression -> expression GE expression .)
    NEQS            reduce using rule 13 (expression -> expression GE expression .)
    EQ              reduce using rule 13 (expression -> expression GE expression .)
    NEQ             reduce using rule 13 (expression -> expression GE expression .)
    AND             reduce using rule 13 (expression -> expression GE expression .)
    OR              reduce using rule 13 (expression -> expression GE expression .)
    NAND            reduce using rule 13 (expression -> expression GE expression .)
    NOR             reduce using rule 13 (expression -> expression GE expression .)
    IMP             reduce using rule 13 (expression -> expression GE expression .)
    XOR             reduce using rule 13 (expression -> expression GE expression .)
    $end            reduce using rule 13 (expression -> expression GE expression .)
    DO              reduce using rule 13 (expression -> expression GE expression .)
    WHILE           reduce using rule 13 (expression -> expression GE expression .)
    RBRACE          reduce using rule 13 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression GE expression .)
    COMMA           reduce using rule 13 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 13 (expression -> expression GE expression .)
    THEN            reduce using rule 13 (expression -> expression GE expression .)
    RPAREN          reduce using rule 13 (expression -> expression GE expression .)
    LBRACE          reduce using rule 13 (expression -> expression GE expression .)
    IN              reduce using rule 13 (expression -> expression GE expression .)
    ELSE            reduce using rule 13 (expression -> expression GE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! LBRACKET        [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! LPAREN          [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! DOT             [ reduce using rule 13 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 35 ]
  ! GT              [ shift and go to state 36 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 38 ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 87

    (14) expression -> expression EQS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    EQS             reduce using rule 14 (expression -> expression EQS expression .)
    NEQS            reduce using rule 14 (expression -> expression EQS expression .)
    EQ              reduce using rule 14 (expression -> expression EQS expression .)
    NEQ             reduce using rule 14 (expression -> expression EQS expression .)
    AND             reduce using rule 14 (expression -> expression EQS expression .)
    OR              reduce using rule 14 (expression -> expression EQS expression .)
    NAND            reduce using rule 14 (expression -> expression EQS expression .)
    NOR             reduce using rule 14 (expression -> expression EQS expression .)
    IMP             reduce using rule 14 (expression -> expression EQS expression .)
    XOR             reduce using rule 14 (expression -> expression EQS expression .)
    $end            reduce using rule 14 (expression -> expression EQS expression .)
    DO              reduce using rule 14 (expression -> expression EQS expression .)
    WHILE           reduce using rule 14 (expression -> expression EQS expression .)
    RBRACE          reduce using rule 14 (expression -> expression EQS expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression EQS expression .)
    COMMA           reduce using rule 14 (expression -> expression EQS expression .)
    RBRACKET        reduce using rule 14 (expression -> expression EQS expression .)
    THEN            reduce using rule 14 (expression -> expression EQS expression .)
    RPAREN          reduce using rule 14 (expression -> expression EQS expression .)
    LBRACE          reduce using rule 14 (expression -> expression EQS expression .)
    IN              reduce using rule 14 (expression -> expression EQS expression .)
    ELSE            reduce using rule 14 (expression -> expression EQS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! LE              [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! GE              [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! LBRACKET        [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! LPAREN          [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! DOT             [ reduce using rule 14 (expression -> expression EQS expression .) ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 88

    (15) expression -> expression NEQS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    EQS             reduce using rule 15 (expression -> expression NEQS expression .)
    NEQS            reduce using rule 15 (expression -> expression NEQS expression .)
    EQ              reduce using rule 15 (expression -> expression NEQS expression .)
    NEQ             reduce using rule 15 (expression -> expression NEQS expression .)
    AND             reduce using rule 15 (expression -> expression NEQS expression .)
    OR              reduce using rule 15 (expression -> expression NEQS expression .)
    NAND            reduce using rule 15 (expression -> expression NEQS expression .)
    NOR             reduce using rule 15 (expression -> expression NEQS expression .)
    IMP             reduce using rule 15 (expression -> expression NEQS expression .)
    XOR             reduce using rule 15 (expression -> expression NEQS expression .)
    $end            reduce using rule 15 (expression -> expression NEQS expression .)
    DO              reduce using rule 15 (expression -> expression NEQS expression .)
    WHILE           reduce using rule 15 (expression -> expression NEQS expression .)
    RBRACE          reduce using rule 15 (expression -> expression NEQS expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression NEQS expression .)
    COMMA           reduce using rule 15 (expression -> expression NEQS expression .)
    RBRACKET        reduce using rule 15 (expression -> expression NEQS expression .)
    THEN            reduce using rule 15 (expression -> expression NEQS expression .)
    RPAREN          reduce using rule 15 (expression -> expression NEQS expression .)
    LBRACE          reduce using rule 15 (expression -> expression NEQS expression .)
    IN              reduce using rule 15 (expression -> expression NEQS expression .)
    ELSE            reduce using rule 15 (expression -> expression NEQS expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! LE              [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! GE              [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! LBRACKET        [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! LPAREN          [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! DOT             [ reduce using rule 15 (expression -> expression NEQS expression .) ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 89

    (16) expression -> expression EQ expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    EQS             reduce using rule 16 (expression -> expression EQ expression .)
    NEQS            reduce using rule 16 (expression -> expression EQ expression .)
    EQ              reduce using rule 16 (expression -> expression EQ expression .)
    NEQ             reduce using rule 16 (expression -> expression EQ expression .)
    AND             reduce using rule 16 (expression -> expression EQ expression .)
    OR              reduce using rule 16 (expression -> expression EQ expression .)
    NAND            reduce using rule 16 (expression -> expression EQ expression .)
    NOR             reduce using rule 16 (expression -> expression EQ expression .)
    IMP             reduce using rule 16 (expression -> expression EQ expression .)
    XOR             reduce using rule 16 (expression -> expression EQ expression .)
    $end            reduce using rule 16 (expression -> expression EQ expression .)
    DO              reduce using rule 16 (expression -> expression EQ expression .)
    WHILE           reduce using rule 16 (expression -> expression EQ expression .)
    RBRACE          reduce using rule 16 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression EQ expression .)
    COMMA           reduce using rule 16 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 16 (expression -> expression EQ expression .)
    THEN            reduce using rule 16 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 16 (expression -> expression EQ expression .)
    LBRACE          reduce using rule 16 (expression -> expression EQ expression .)
    IN              reduce using rule 16 (expression -> expression EQ expression .)
    ELSE            reduce using rule 16 (expression -> expression EQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! LBRACKET        [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! LPAREN          [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! DOT             [ reduce using rule 16 (expression -> expression EQ expression .) ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 90

    (17) expression -> expression NEQ expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    EQS             reduce using rule 17 (expression -> expression NEQ expression .)
    NEQS            reduce using rule 17 (expression -> expression NEQ expression .)
    EQ              reduce using rule 17 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 17 (expression -> expression NEQ expression .)
    AND             reduce using rule 17 (expression -> expression NEQ expression .)
    OR              reduce using rule 17 (expression -> expression NEQ expression .)
    NAND            reduce using rule 17 (expression -> expression NEQ expression .)
    NOR             reduce using rule 17 (expression -> expression NEQ expression .)
    IMP             reduce using rule 17 (expression -> expression NEQ expression .)
    XOR             reduce using rule 17 (expression -> expression NEQ expression .)
    $end            reduce using rule 17 (expression -> expression NEQ expression .)
    DO              reduce using rule 17 (expression -> expression NEQ expression .)
    WHILE           reduce using rule 17 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 17 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 17 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 17 (expression -> expression NEQ expression .)
    THEN            reduce using rule 17 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 17 (expression -> expression NEQ expression .)
    LBRACE          reduce using rule 17 (expression -> expression NEQ expression .)
    IN              reduce using rule 17 (expression -> expression NEQ expression .)
    ELSE            reduce using rule 17 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 17 (expression -> expression NEQ expression .) ]
  ! EQS             [ shift and go to state 39 ]
  ! NEQS            [ shift and go to state 40 ]
  ! EQ              [ shift and go to state 41 ]
  ! NEQ             [ shift and go to state 42 ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 91

    (18) expression -> expression AND expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    AND             reduce using rule 18 (expression -> expression AND expression .)
    OR              reduce using rule 18 (expression -> expression AND expression .)
    NAND            reduce using rule 18 (expression -> expression AND expression .)
    NOR             reduce using rule 18 (expression -> expression AND expression .)
    IMP             reduce using rule 18 (expression -> expression AND expression .)
    XOR             reduce using rule 18 (expression -> expression AND expression .)
    $end            reduce using rule 18 (expression -> expression AND expression .)
    DO              reduce using rule 18 (expression -> expression AND expression .)
    WHILE           reduce using rule 18 (expression -> expression AND expression .)
    RBRACE          reduce using rule 18 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression AND expression .)
    COMMA           reduce using rule 18 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 18 (expression -> expression AND expression .)
    THEN            reduce using rule 18 (expression -> expression AND expression .)
    RPAREN          reduce using rule 18 (expression -> expression AND expression .)
    LBRACE          reduce using rule 18 (expression -> expression AND expression .)
    IN              reduce using rule 18 (expression -> expression AND expression .)
    ELSE            reduce using rule 18 (expression -> expression AND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! EQS             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! NEQS            [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 18 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 92

    (19) expression -> expression OR expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    OR              reduce using rule 19 (expression -> expression OR expression .)
    NOR             reduce using rule 19 (expression -> expression OR expression .)
    XOR             reduce using rule 19 (expression -> expression OR expression .)
    $end            reduce using rule 19 (expression -> expression OR expression .)
    DO              reduce using rule 19 (expression -> expression OR expression .)
    WHILE           reduce using rule 19 (expression -> expression OR expression .)
    RBRACE          reduce using rule 19 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression OR expression .)
    COMMA           reduce using rule 19 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 19 (expression -> expression OR expression .)
    THEN            reduce using rule 19 (expression -> expression OR expression .)
    RPAREN          reduce using rule 19 (expression -> expression OR expression .)
    LBRACE          reduce using rule 19 (expression -> expression OR expression .)
    IN              reduce using rule 19 (expression -> expression OR expression .)
    ELSE            reduce using rule 19 (expression -> expression OR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    NAND            shift and go to state 45
    IMP             shift and go to state 47
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! EQS             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! NEQS            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! NAND            [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! IMP             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 19 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! NOR             [ shift and go to state 46 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 93

    (20) expression -> expression NAND expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    AND             reduce using rule 20 (expression -> expression NAND expression .)
    OR              reduce using rule 20 (expression -> expression NAND expression .)
    NAND            reduce using rule 20 (expression -> expression NAND expression .)
    NOR             reduce using rule 20 (expression -> expression NAND expression .)
    IMP             reduce using rule 20 (expression -> expression NAND expression .)
    XOR             reduce using rule 20 (expression -> expression NAND expression .)
    $end            reduce using rule 20 (expression -> expression NAND expression .)
    DO              reduce using rule 20 (expression -> expression NAND expression .)
    WHILE           reduce using rule 20 (expression -> expression NAND expression .)
    RBRACE          reduce using rule 20 (expression -> expression NAND expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression NAND expression .)
    COMMA           reduce using rule 20 (expression -> expression NAND expression .)
    RBRACKET        reduce using rule 20 (expression -> expression NAND expression .)
    THEN            reduce using rule 20 (expression -> expression NAND expression .)
    RPAREN          reduce using rule 20 (expression -> expression NAND expression .)
    LBRACE          reduce using rule 20 (expression -> expression NAND expression .)
    IN              reduce using rule 20 (expression -> expression NAND expression .)
    ELSE            reduce using rule 20 (expression -> expression NAND expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! MINUS           [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! TIMES           [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! EQS             [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! NEQS            [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! NEQ             [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! LBRACKET        [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! LPAREN          [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! DOT             [ reduce using rule 20 (expression -> expression NAND expression .) ]
  ! AND             [ shift and go to state 43 ]
  ! OR              [ shift and go to state 44 ]
  ! NAND            [ shift and go to state 45 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 94

    (21) expression -> expression NOR expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    OR              reduce using rule 21 (expression -> expression NOR expression .)
    NOR             reduce using rule 21 (expression -> expression NOR expression .)
    XOR             reduce using rule 21 (expression -> expression NOR expression .)
    $end            reduce using rule 21 (expression -> expression NOR expression .)
    DO              reduce using rule 21 (expression -> expression NOR expression .)
    WHILE           reduce using rule 21 (expression -> expression NOR expression .)
    RBRACE          reduce using rule 21 (expression -> expression NOR expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression NOR expression .)
    COMMA           reduce using rule 21 (expression -> expression NOR expression .)
    RBRACKET        reduce using rule 21 (expression -> expression NOR expression .)
    THEN            reduce using rule 21 (expression -> expression NOR expression .)
    RPAREN          reduce using rule 21 (expression -> expression NOR expression .)
    LBRACE          reduce using rule 21 (expression -> expression NOR expression .)
    IN              reduce using rule 21 (expression -> expression NOR expression .)
    ELSE            reduce using rule 21 (expression -> expression NOR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    NAND            shift and go to state 45
    IMP             shift and go to state 47
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! LT              [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! LE              [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! GE              [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! EQS             [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! NEQS            [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! NEQ             [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! AND             [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! NAND            [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! IMP             [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! LBRACKET        [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! LPAREN          [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! DOT             [ reduce using rule 21 (expression -> expression NOR expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! NOR             [ shift and go to state 46 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 95

    (22) expression -> expression IMP expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    OR              reduce using rule 22 (expression -> expression IMP expression .)
    NOR             reduce using rule 22 (expression -> expression IMP expression .)
    IMP             reduce using rule 22 (expression -> expression IMP expression .)
    XOR             reduce using rule 22 (expression -> expression IMP expression .)
    $end            reduce using rule 22 (expression -> expression IMP expression .)
    DO              reduce using rule 22 (expression -> expression IMP expression .)
    WHILE           reduce using rule 22 (expression -> expression IMP expression .)
    RBRACE          reduce using rule 22 (expression -> expression IMP expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression IMP expression .)
    COMMA           reduce using rule 22 (expression -> expression IMP expression .)
    RBRACKET        reduce using rule 22 (expression -> expression IMP expression .)
    THEN            reduce using rule 22 (expression -> expression IMP expression .)
    RPAREN          reduce using rule 22 (expression -> expression IMP expression .)
    LBRACE          reduce using rule 22 (expression -> expression IMP expression .)
    IN              reduce using rule 22 (expression -> expression IMP expression .)
    ELSE            reduce using rule 22 (expression -> expression IMP expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    NAND            shift and go to state 45
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! LT              [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! GT              [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! LE              [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! GE              [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! EQS             [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! NEQS            [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! EQ              [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! NEQ             [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! AND             [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! NAND            [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! LBRACKET        [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! LPAREN          [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! DOT             [ reduce using rule 22 (expression -> expression IMP expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! NOR             [ shift and go to state 46 ]
  ! IMP             [ shift and go to state 47 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 96

    (23) expression -> expression XOR expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    OR              reduce using rule 23 (expression -> expression XOR expression .)
    NOR             reduce using rule 23 (expression -> expression XOR expression .)
    XOR             reduce using rule 23 (expression -> expression XOR expression .)
    $end            reduce using rule 23 (expression -> expression XOR expression .)
    DO              reduce using rule 23 (expression -> expression XOR expression .)
    WHILE           reduce using rule 23 (expression -> expression XOR expression .)
    RBRACE          reduce using rule 23 (expression -> expression XOR expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression XOR expression .)
    COMMA           reduce using rule 23 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 23 (expression -> expression XOR expression .)
    THEN            reduce using rule 23 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 23 (expression -> expression XOR expression .)
    LBRACE          reduce using rule 23 (expression -> expression XOR expression .)
    IN              reduce using rule 23 (expression -> expression XOR expression .)
    ELSE            reduce using rule 23 (expression -> expression XOR expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    NAND            shift and go to state 45
    IMP             shift and go to state 47
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! EQS             [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! NEQS            [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! EQ              [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! NEQ             [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! NAND            [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! IMP             [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! LBRACKET        [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! LPAREN          [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! DOT             [ reduce using rule 23 (expression -> expression XOR expression .) ]
  ! OR              [ shift and go to state 44 ]
  ! NOR             [ shift and go to state 46 ]
  ! XOR             [ shift and go to state 48 ]

    dots                           shift and go to state 50

state 97

    (55) expression -> expression LBRACKET expression . RBRACKET
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACKET        shift and go to state 129
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 98

    (69) expression -> expression dots IDENT .

    PLUS            reduce using rule 69 (expression -> expression dots IDENT .)
    MINUS           reduce using rule 69 (expression -> expression dots IDENT .)
    TIMES           reduce using rule 69 (expression -> expression dots IDENT .)
    DIVIDE          reduce using rule 69 (expression -> expression dots IDENT .)
    LT              reduce using rule 69 (expression -> expression dots IDENT .)
    GT              reduce using rule 69 (expression -> expression dots IDENT .)
    LE              reduce using rule 69 (expression -> expression dots IDENT .)
    GE              reduce using rule 69 (expression -> expression dots IDENT .)
    EQS             reduce using rule 69 (expression -> expression dots IDENT .)
    NEQS            reduce using rule 69 (expression -> expression dots IDENT .)
    EQ              reduce using rule 69 (expression -> expression dots IDENT .)
    NEQ             reduce using rule 69 (expression -> expression dots IDENT .)
    AND             reduce using rule 69 (expression -> expression dots IDENT .)
    OR              reduce using rule 69 (expression -> expression dots IDENT .)
    NAND            reduce using rule 69 (expression -> expression dots IDENT .)
    NOR             reduce using rule 69 (expression -> expression dots IDENT .)
    IMP             reduce using rule 69 (expression -> expression dots IDENT .)
    XOR             reduce using rule 69 (expression -> expression dots IDENT .)
    LBRACKET        reduce using rule 69 (expression -> expression dots IDENT .)
    LPAREN          reduce using rule 69 (expression -> expression dots IDENT .)
    DOT             reduce using rule 69 (expression -> expression dots IDENT .)
    $end            reduce using rule 69 (expression -> expression dots IDENT .)
    DO              reduce using rule 69 (expression -> expression dots IDENT .)
    WHILE           reduce using rule 69 (expression -> expression dots IDENT .)
    RBRACE          reduce using rule 69 (expression -> expression dots IDENT .)
    SEMICOLON       reduce using rule 69 (expression -> expression dots IDENT .)
    COMMA           reduce using rule 69 (expression -> expression dots IDENT .)
    RBRACKET        reduce using rule 69 (expression -> expression dots IDENT .)
    THEN            reduce using rule 69 (expression -> expression dots IDENT .)
    RPAREN          reduce using rule 69 (expression -> expression dots IDENT .)
    LBRACE          reduce using rule 69 (expression -> expression dots IDENT .)
    IN              reduce using rule 69 (expression -> expression dots IDENT .)
    ELSE            reduce using rule 69 (expression -> expression dots IDENT .)


state 99

    (70) expression -> expression LPAREN RPAREN .

    PLUS            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    MINUS           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    TIMES           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LT              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    GT              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LE              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    GE              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    EQS             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NEQS            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    EQ              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NEQ             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    AND             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    OR              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NAND            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    NOR             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    IMP             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    XOR             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LBRACKET        reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LPAREN          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DOT             reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    $end            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    DO              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    WHILE           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    RBRACE          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    SEMICOLON       reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    COMMA           reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    THEN            reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    RPAREN          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    LBRACE          reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    IN              reduce using rule 70 (expression -> expression LPAREN RPAREN .)
    ELSE            reduce using rule 70 (expression -> expression LPAREN RPAREN .)


state 100

    (71) expression -> expression LPAREN expr_list . RPAREN

    RPAREN          shift and go to state 130


state 101

    (5) expression -> LOOP expression DO . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 131
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 102

    (42) expression -> DO expression WHILE . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 132
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 103

    (34) assign_expression -> IDENT ASSIGN expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    DO              reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    WHILE           reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    RBRACE          reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    COMMA           reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    RBRACKET        reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    THEN            reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    RPAREN          reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    LBRACE          reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    IN              reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    ELSE            reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! LT              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! GT              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! LE              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! GE              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! EQS             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! NEQS            [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! EQ              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! AND             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! OR              [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! NAND            [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! NOR             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! IMP             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! XOR             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]
  ! DOT             [ reduce using rule 34 (assign_expression -> IDENT ASSIGN expression .) ]

    dots                           shift and go to state 50

state 104

    (29) expression -> FOR assign_expression SEMICOLON . expression SEMICOLON assign_expression DO expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    assign_expression              shift and go to state 12
    expression                     shift and go to state 133
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 105

    (30) expression -> LBRACE sequence RBRACE .

    PLUS            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    MINUS           reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    TIMES           reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    DIVIDE          reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    LT              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    GT              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    LE              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    GE              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    EQS             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    NEQS            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    EQ              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    NEQ             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    AND             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    OR              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    NAND            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    NOR             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    IMP             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    XOR             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    LBRACKET        reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    LPAREN          reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    DOT             reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    $end            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    DO              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    WHILE           reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    RBRACE          reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    SEMICOLON       reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    COMMA           reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    RBRACKET        reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    THEN            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    RPAREN          reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    LBRACE          reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    IN              reduce using rule 30 (expression -> LBRACE sequence RBRACE .)
    ELSE            reduce using rule 30 (expression -> LBRACE sequence RBRACE .)


state 106

    (3) sequence -> sequence SEMICOLON . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 134
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 107

    (38) expression -> WHILE expression DO . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 135
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 108

    (46) expression -> BACKSLASH RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    DO              reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    WHILE           reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    RBRACE          reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    COMMA           reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    THEN            reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    RPAREN          reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    LBRACE          reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    IN              reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    ELSE            reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> BACKSLASH RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50

state 109

    (47) expression -> BACKSLASH ident_list RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 136
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 110

    (48) expression -> BACKSLASH ident_list DOT . DOT DOT RIGHT_ARROW expression

    DOT             shift and go to state 137


state 111

    (26) ident_list -> IDENT COMMA . ident_list
    (25) ident_list -> . IDENT
    (26) ident_list -> . IDENT COMMA ident_list

    IDENT           shift and go to state 65

    ident_list                     shift and go to state 138

state 112

    (52) expression -> LBRACKET expr_list RBRACKET .

    PLUS            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    MINUS           reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    TIMES           reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    DIVIDE          reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    LT              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    GT              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    LE              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    GE              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    EQS             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    NEQS            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    EQ              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    NEQ             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    AND             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    OR              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    NAND            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    NOR             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    IMP             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    XOR             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    LBRACKET        reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    LPAREN          reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    DOT             reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    $end            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    DO              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    WHILE           reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    RBRACE          reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    SEMICOLON       reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    COMMA           reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    RBRACKET        reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    THEN            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    RPAREN          reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    LBRACE          reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    IN              reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)
    ELSE            reduce using rule 52 (expression -> LBRACKET expr_list RBRACKET .)


state 113

    (40) expr_list -> expression COMMA . expr_list
    (39) expr_list -> . expression
    (40) expr_list -> . expression COMMA expr_list
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 69
    expr_list                      shift and go to state 139
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 114

    (53) expression -> IF expression THEN . expression
    (54) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 140
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 115

    (56) expression -> STRUCT LBRACE RBRACE .

    PLUS            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    MINUS           reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    TIMES           reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    DIVIDE          reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    LT              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    GT              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    LE              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    GE              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    EQS             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    NEQS            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    EQ              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    NEQ             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    AND             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    OR              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    NAND            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    NOR             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    IMP             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    XOR             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    LBRACKET        reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    LPAREN          reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    DOT             reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    $end            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    DO              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    WHILE           reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    RBRACE          reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    SEMICOLON       reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    COMMA           reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    RBRACKET        reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    THEN            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    RPAREN          reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    LBRACE          reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    IN              reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)
    ELSE            reduce using rule 56 (expression -> STRUCT LBRACE RBRACE .)


state 116

    (57) expression -> STRUCT LBRACE initializer_list . RBRACE

    RBRACE          shift and go to state 141


state 117

    (31) initializer_list -> initializer .
    (32) initializer_list -> initializer . SEMICOLON initializer_list

    RBRACE          reduce using rule 31 (initializer_list -> initializer .)
    SEMICOLON       shift and go to state 142


state 118

    (36) initializer -> member_assign_expression .

    SEMICOLON       reduce using rule 36 (initializer -> member_assign_expression .)
    RBRACE          reduce using rule 36 (initializer -> member_assign_expression .)


state 119

    (37) initializer -> SET . member_assign_expression
    (73) member_assign_expression -> . dots IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    DOT             shift and go to state 19

    member_assign_expression       shift and go to state 143
    dots                           shift and go to state 120

state 120

    (73) member_assign_expression -> dots . IDENT ASSIGN expression

    IDENT           shift and go to state 144


state 121

    (58) expression -> LOCK ident_list IN . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 145
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 122

    (59) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    EQS             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    NEQS            reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    NAND            reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    NOR             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    IMP             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 59 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 59 (expression -> LPAREN expression RPAREN .)


state 123

    (60) expression -> FUN IDENT RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 146
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 124

    (61) expression -> FUN IDENT ident_list . RIGHT_ARROW expression
    (62) expression -> FUN IDENT ident_list . DOT DOT DOT RIGHT_ARROW expression

    RIGHT_ARROW     shift and go to state 147
    DOT             shift and go to state 148


state 125

    (63) expression -> LOCAL assignment_list IN . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 149
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 126

    (50) assignment_list -> assign_expression COMMA . assignment_list
    (49) assignment_list -> . assign_expression
    (50) assignment_list -> . assign_expression COMMA assignment_list
    (34) assign_expression -> . IDENT ASSIGN expression

    IDENT           shift and go to state 58

    assign_expression              shift and go to state 76
    assignment_list                shift and go to state 150

state 127

    (64) expression -> EXTEND expression LBRACE . RBRACE
    (65) expression -> EXTEND expression LBRACE . initializer_list RBRACE
    (31) initializer_list -> . initializer
    (32) initializer_list -> . initializer SEMICOLON initializer_list
    (36) initializer -> . member_assign_expression
    (37) initializer -> . SET member_assign_expression
    (73) member_assign_expression -> . dots IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACE          shift and go to state 151
    SET             shift and go to state 119
    DOT             shift and go to state 19

    initializer_list               shift and go to state 152
    initializer                    shift and go to state 117
    member_assign_expression       shift and go to state 118
    dots                           shift and go to state 120

state 128

    (73) member_assign_expression -> dots IDENT ASSIGN . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    dots                           shift and go to state 28
    expression                     shift and go to state 153
    assign_expression              shift and go to state 12
    member_assign_expression       shift and go to state 29

state 129

    (55) expression -> expression LBRACKET expression RBRACKET .

    PLUS            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    GT              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    GE              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    EQS             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NEQS            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NAND            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NOR             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    IMP             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    XOR             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    $end            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DO              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    THEN            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    IN              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)


state 130

    (71) expression -> expression LPAREN expr_list RPAREN .

    PLUS            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    MINUS           reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    TIMES           reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    DIVIDE          reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    LT              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    GT              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    LE              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    GE              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    EQS             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    NEQS            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    EQ              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    NEQ             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    AND             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    OR              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    NAND            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    NOR             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    IMP             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    XOR             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    LBRACKET        reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    LPAREN          reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    DOT             reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    $end            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    DO              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    WHILE           reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    RBRACE          reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    SEMICOLON       reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    COMMA           reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    RBRACKET        reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    THEN            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    RPAREN          reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    LBRACE          reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    IN              reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)
    ELSE            reduce using rule 71 (expression -> expression LPAREN expr_list RPAREN .)


state 131

    (5) expression -> LOOP expression DO expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 5 (expression -> LOOP expression DO expression .)
    DO              reduce using rule 5 (expression -> LOOP expression DO expression .)
    WHILE           reduce using rule 5 (expression -> LOOP expression DO expression .)
    RBRACE          reduce using rule 5 (expression -> LOOP expression DO expression .)
    SEMICOLON       reduce using rule 5 (expression -> LOOP expression DO expression .)
    COMMA           reduce using rule 5 (expression -> LOOP expression DO expression .)
    RBRACKET        reduce using rule 5 (expression -> LOOP expression DO expression .)
    THEN            reduce using rule 5 (expression -> LOOP expression DO expression .)
    RPAREN          reduce using rule 5 (expression -> LOOP expression DO expression .)
    LBRACE          reduce using rule 5 (expression -> LOOP expression DO expression .)
    IN              reduce using rule 5 (expression -> LOOP expression DO expression .)
    ELSE            reduce using rule 5 (expression -> LOOP expression DO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! LT              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! GT              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! LE              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! GE              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! EQS             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! NEQS            [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! EQ              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! NEQ             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! AND             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! OR              [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! NAND            [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! NOR             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! IMP             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! XOR             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! LBRACKET        [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! LPAREN          [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]
  ! DOT             [ reduce using rule 5 (expression -> LOOP expression DO expression .) ]

    dots                           shift and go to state 50

state 132

    (42) expression -> DO expression WHILE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 42 (expression -> DO expression WHILE expression .)
    DO              reduce using rule 42 (expression -> DO expression WHILE expression .)
    WHILE           reduce using rule 42 (expression -> DO expression WHILE expression .)
    RBRACE          reduce using rule 42 (expression -> DO expression WHILE expression .)
    SEMICOLON       reduce using rule 42 (expression -> DO expression WHILE expression .)
    COMMA           reduce using rule 42 (expression -> DO expression WHILE expression .)
    RBRACKET        reduce using rule 42 (expression -> DO expression WHILE expression .)
    THEN            reduce using rule 42 (expression -> DO expression WHILE expression .)
    RPAREN          reduce using rule 42 (expression -> DO expression WHILE expression .)
    LBRACE          reduce using rule 42 (expression -> DO expression WHILE expression .)
    IN              reduce using rule 42 (expression -> DO expression WHILE expression .)
    ELSE            reduce using rule 42 (expression -> DO expression WHILE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! LT              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! GT              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! LE              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! GE              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! EQS             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! NEQS            [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! NEQ             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! AND             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! OR              [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! NAND            [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! NOR             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! IMP             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! XOR             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! LBRACKET        [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! LPAREN          [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> DO expression WHILE expression .) ]

    dots                           shift and go to state 50

state 133

    (29) expression -> FOR assign_expression SEMICOLON expression . SEMICOLON assign_expression DO expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    SEMICOLON       shift and go to state 154
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 134

    (3) sequence -> sequence SEMICOLON expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    RBRACE          reduce using rule 3 (sequence -> sequence SEMICOLON expression .)
    SEMICOLON       reduce using rule 3 (sequence -> sequence SEMICOLON expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

    dots                           shift and go to state 50

state 135

    (38) expression -> WHILE expression DO expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 38 (expression -> WHILE expression DO expression .)
    DO              reduce using rule 38 (expression -> WHILE expression DO expression .)
    WHILE           reduce using rule 38 (expression -> WHILE expression DO expression .)
    RBRACE          reduce using rule 38 (expression -> WHILE expression DO expression .)
    SEMICOLON       reduce using rule 38 (expression -> WHILE expression DO expression .)
    COMMA           reduce using rule 38 (expression -> WHILE expression DO expression .)
    RBRACKET        reduce using rule 38 (expression -> WHILE expression DO expression .)
    THEN            reduce using rule 38 (expression -> WHILE expression DO expression .)
    RPAREN          reduce using rule 38 (expression -> WHILE expression DO expression .)
    LBRACE          reduce using rule 38 (expression -> WHILE expression DO expression .)
    IN              reduce using rule 38 (expression -> WHILE expression DO expression .)
    ELSE            reduce using rule 38 (expression -> WHILE expression DO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! LT              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! GT              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! LE              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! GE              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! EQS             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! NEQS            [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! EQ              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! NEQ             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! AND             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! OR              [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! NAND            [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! NOR             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! IMP             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! XOR             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! LBRACKET        [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! LPAREN          [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]
  ! DOT             [ reduce using rule 38 (expression -> WHILE expression DO expression .) ]

    dots                           shift and go to state 50

state 136

    (47) expression -> BACKSLASH ident_list RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    DO              reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    WHILE           reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    RBRACE          reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    COMMA           reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    THEN            reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    RPAREN          reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    LBRACE          reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    IN              reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    ELSE            reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> BACKSLASH ident_list RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50

state 137

    (48) expression -> BACKSLASH ident_list DOT DOT . DOT RIGHT_ARROW expression

    DOT             shift and go to state 155


state 138

    (26) ident_list -> IDENT COMMA ident_list .

    RIGHT_ARROW     reduce using rule 26 (ident_list -> IDENT COMMA ident_list .)
    DOT             reduce using rule 26 (ident_list -> IDENT COMMA ident_list .)
    IN              reduce using rule 26 (ident_list -> IDENT COMMA ident_list .)


state 139

    (40) expr_list -> expression COMMA expr_list .

    RBRACKET        reduce using rule 40 (expr_list -> expression COMMA expr_list .)
    RPAREN          reduce using rule 40 (expr_list -> expression COMMA expr_list .)


state 140

    (53) expression -> IF expression THEN expression .
    (54) expression -> IF expression THEN expression . ELSE expression
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 53 (expression -> IF expression THEN expression .)
    DO              reduce using rule 53 (expression -> IF expression THEN expression .)
    WHILE           reduce using rule 53 (expression -> IF expression THEN expression .)
    RBRACE          reduce using rule 53 (expression -> IF expression THEN expression .)
    SEMICOLON       reduce using rule 53 (expression -> IF expression THEN expression .)
    COMMA           reduce using rule 53 (expression -> IF expression THEN expression .)
    RBRACKET        reduce using rule 53 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 53 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 53 (expression -> IF expression THEN expression .)
    LBRACE          reduce using rule 53 (expression -> IF expression THEN expression .)
    IN              reduce using rule 53 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 156
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! LT              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! GT              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! LE              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! GE              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! EQS             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! NEQS            [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! EQ              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! NEQ             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! AND             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! OR              [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! NAND            [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! NOR             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! IMP             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! XOR             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! LBRACKET        [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! LPAREN          [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 53 (expression -> IF expression THEN expression .) ]

    dots                           shift and go to state 50

state 141

    (57) expression -> STRUCT LBRACE initializer_list RBRACE .

    PLUS            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    MINUS           reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    TIMES           reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    DIVIDE          reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    LT              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    GT              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    LE              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    GE              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    EQS             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    NEQS            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    EQ              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    NEQ             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    AND             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    OR              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    NAND            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    NOR             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    IMP             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    XOR             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    LBRACKET        reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    LPAREN          reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    DOT             reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    $end            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    DO              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    WHILE           reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    RBRACE          reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    SEMICOLON       reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    COMMA           reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    RBRACKET        reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    THEN            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    RPAREN          reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    LBRACE          reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    IN              reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)
    ELSE            reduce using rule 57 (expression -> STRUCT LBRACE initializer_list RBRACE .)


state 142

    (32) initializer_list -> initializer SEMICOLON . initializer_list
    (31) initializer_list -> . initializer
    (32) initializer_list -> . initializer SEMICOLON initializer_list
    (36) initializer -> . member_assign_expression
    (37) initializer -> . SET member_assign_expression
    (73) member_assign_expression -> . dots IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    SET             shift and go to state 119
    DOT             shift and go to state 19

    initializer                    shift and go to state 117
    initializer_list               shift and go to state 157
    member_assign_expression       shift and go to state 118
    dots                           shift and go to state 120

state 143

    (37) initializer -> SET member_assign_expression .

    SEMICOLON       reduce using rule 37 (initializer -> SET member_assign_expression .)
    RBRACE          reduce using rule 37 (initializer -> SET member_assign_expression .)


state 144

    (73) member_assign_expression -> dots IDENT . ASSIGN expression

    ASSIGN          shift and go to state 128


state 145

    (58) expression -> LOCK ident_list IN expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    DO              reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    WHILE           reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    RBRACE          reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    SEMICOLON       reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    COMMA           reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    RBRACKET        reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    THEN            reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    RPAREN          reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    LBRACE          reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    IN              reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    ELSE            reduce using rule 58 (expression -> LOCK ident_list IN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! LT              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! GT              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! LE              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! GE              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! EQS             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! NEQS            [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! NEQ             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! AND             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! OR              [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! NAND            [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! NOR             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! IMP             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! XOR             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! LBRACKET        [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! LPAREN          [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]
  ! DOT             [ reduce using rule 58 (expression -> LOCK ident_list IN expression .) ]

    dots                           shift and go to state 50

state 146

    (60) expression -> FUN IDENT RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    DO              reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    WHILE           reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    RBRACE          reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    COMMA           reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    THEN            reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    RPAREN          reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    LBRACE          reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    IN              reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    ELSE            reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> FUN IDENT RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50

state 147

    (61) expression -> FUN IDENT ident_list RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 158
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 148

    (62) expression -> FUN IDENT ident_list DOT . DOT DOT RIGHT_ARROW expression

    DOT             shift and go to state 159


state 149

    (63) expression -> LOCAL assignment_list IN expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    DO              reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    WHILE           reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    RBRACE          reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    SEMICOLON       reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    COMMA           reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    RBRACKET        reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    THEN            reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    RPAREN          reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    LBRACE          reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    IN              reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    ELSE            reduce using rule 63 (expression -> LOCAL assignment_list IN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! LT              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! GT              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! LE              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! GE              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! EQS             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! NEQS            [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! NEQ             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! AND             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! OR              [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! NAND            [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! NOR             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! IMP             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! XOR             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! LBRACKET        [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! LPAREN          [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> LOCAL assignment_list IN expression .) ]

    dots                           shift and go to state 50

state 150

    (50) assignment_list -> assign_expression COMMA assignment_list .

    IN              reduce using rule 50 (assignment_list -> assign_expression COMMA assignment_list .)


state 151

    (64) expression -> EXTEND expression LBRACE RBRACE .

    PLUS            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    MINUS           reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    TIMES           reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    DIVIDE          reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    LT              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    GT              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    LE              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    GE              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    EQS             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    NEQS            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    EQ              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    NEQ             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    AND             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    OR              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    NAND            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    NOR             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    IMP             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    XOR             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    LBRACKET        reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    LPAREN          reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    DOT             reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    $end            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    DO              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    WHILE           reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    RBRACE          reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    SEMICOLON       reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    COMMA           reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    RBRACKET        reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    THEN            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    RPAREN          reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    LBRACE          reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    IN              reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)
    ELSE            reduce using rule 64 (expression -> EXTEND expression LBRACE RBRACE .)


state 152

    (65) expression -> EXTEND expression LBRACE initializer_list . RBRACE

    RBRACE          shift and go to state 160


state 153

    (73) member_assign_expression -> dots IDENT ASSIGN expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    DO              reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    WHILE           reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    RBRACE          reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    SEMICOLON       reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    COMMA           reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    RBRACKET        reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    THEN            reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    RPAREN          reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    LBRACE          reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    IN              reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    ELSE            reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! LT              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! GT              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! LE              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! GE              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! EQS             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! NEQS            [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! EQ              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! NEQ             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! AND             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! OR              [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! NAND            [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! NOR             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! IMP             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! XOR             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]
  ! DOT             [ reduce using rule 73 (member_assign_expression -> dots IDENT ASSIGN expression .) ]

    dots                           shift and go to state 50

state 154

    (29) expression -> FOR assign_expression SEMICOLON expression SEMICOLON . assign_expression DO expression
    (34) assign_expression -> . IDENT ASSIGN expression

    IDENT           shift and go to state 58

    assign_expression              shift and go to state 161

state 155

    (48) expression -> BACKSLASH ident_list DOT DOT DOT . RIGHT_ARROW expression

    RIGHT_ARROW     shift and go to state 162


state 156

    (54) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 163
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 157

    (32) initializer_list -> initializer SEMICOLON initializer_list .

    RBRACE          reduce using rule 32 (initializer_list -> initializer SEMICOLON initializer_list .)


state 158

    (61) expression -> FUN IDENT ident_list RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    DO              reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    WHILE           reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    RBRACE          reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    COMMA           reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    THEN            reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    RPAREN          reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    LBRACE          reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    IN              reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    ELSE            reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> FUN IDENT ident_list RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50

state 159

    (62) expression -> FUN IDENT ident_list DOT DOT . DOT RIGHT_ARROW expression

    DOT             shift and go to state 164


state 160

    (65) expression -> EXTEND expression LBRACE initializer_list RBRACE .

    PLUS            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    MINUS           reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    TIMES           reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    DIVIDE          reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    LT              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    GT              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    LE              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    GE              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    EQS             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    NEQS            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    EQ              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    NEQ             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    AND             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    OR              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    NAND            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    NOR             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    IMP             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    XOR             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    LBRACKET        reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    LPAREN          reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    DOT             reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    $end            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    DO              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    WHILE           reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    RBRACE          reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    SEMICOLON       reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    COMMA           reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    RBRACKET        reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    THEN            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    RPAREN          reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    LBRACE          reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    IN              reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)
    ELSE            reduce using rule 65 (expression -> EXTEND expression LBRACE initializer_list RBRACE .)


state 161

    (29) expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression . DO expression

    DO              shift and go to state 165


state 162

    (48) expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 166
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 163

    (54) expression -> IF expression THEN expression ELSE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    WHILE           reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    RBRACE          reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    SEMICOLON       reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    COMMA           reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    RBRACKET        reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    LBRACE          reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    IN              reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LT              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GT              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LE              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GE              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQS             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQS            [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! AND             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! OR              [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NAND            [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NOR             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! IMP             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! XOR             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LBRACKET        [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LPAREN          [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> IF expression THEN expression ELSE expression .) ]

    dots                           shift and go to state 50

state 164

    (62) expression -> FUN IDENT ident_list DOT DOT DOT . RIGHT_ARROW expression

    RIGHT_ARROW     shift and go to state 167


state 165

    (29) expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    assign_expression              shift and go to state 12
    expression                     shift and go to state 168
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 166

    (48) expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    DO              reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    WHILE           reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RBRACE          reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    COMMA           reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    THEN            reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RPAREN          reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    LBRACE          reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    IN              reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    ELSE            reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50

state 167

    (62) expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW . expression
    (1) expression -> . COMMENT
    (2) expression -> . NUMBER
    (5) expression -> . LOOP expression DO expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression DIVIDE expression
    (10) expression -> . expression LT expression
    (11) expression -> . expression GT expression
    (12) expression -> . expression LE expression
    (13) expression -> . expression GE expression
    (14) expression -> . expression EQS expression
    (15) expression -> . expression NEQS expression
    (16) expression -> . expression EQ expression
    (17) expression -> . expression NEQ expression
    (18) expression -> . expression AND expression
    (19) expression -> . expression OR expression
    (20) expression -> . expression NAND expression
    (21) expression -> . expression NOR expression
    (22) expression -> . expression IMP expression
    (23) expression -> . expression XOR expression
    (24) expression -> . IDENT
    (27) expression -> . TRUE
    (28) expression -> . FALSE
    (29) expression -> . FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression
    (30) expression -> . LBRACE sequence RBRACE
    (33) expression -> . assign_expression
    (35) expression -> . STRING
    (38) expression -> . WHILE expression DO expression
    (41) expression -> . CHAR
    (42) expression -> . DO expression WHILE expression
    (43) expression -> . NOT expression
    (44) expression -> . PLUS expression
    (45) expression -> . MINUS expression
    (46) expression -> . BACKSLASH RIGHT_ARROW expression
    (47) expression -> . BACKSLASH ident_list RIGHT_ARROW expression
    (48) expression -> . BACKSLASH ident_list DOT DOT DOT RIGHT_ARROW expression
    (51) expression -> . LBRACKET RBRACKET
    (52) expression -> . LBRACKET expr_list RBRACKET
    (53) expression -> . IF expression THEN expression
    (54) expression -> . IF expression THEN expression ELSE expression
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . STRUCT LBRACE RBRACE
    (57) expression -> . STRUCT LBRACE initializer_list RBRACE
    (58) expression -> . LOCK ident_list IN expression
    (59) expression -> . LPAREN expression RPAREN
    (60) expression -> . FUN IDENT RIGHT_ARROW expression
    (61) expression -> . FUN IDENT ident_list RIGHT_ARROW expression
    (62) expression -> . FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression
    (63) expression -> . LOCAL assignment_list IN expression
    (64) expression -> . EXTEND expression LBRACE RBRACE
    (65) expression -> . EXTEND expression LBRACE initializer_list RBRACE
    (68) expression -> . dots IDENT
    (69) expression -> . expression dots IDENT
    (70) expression -> . expression LPAREN RPAREN
    (71) expression -> . expression LPAREN expr_list RPAREN
    (72) expression -> . member_assign_expression
    (74) expression -> . THIS
    (34) assign_expression -> . IDENT ASSIGN expression
    (66) dots -> . DOT
    (67) dots -> . DOT dots
    (73) member_assign_expression -> . dots IDENT ASSIGN expression

    COMMENT         shift and go to state 2
    NUMBER          shift and go to state 3
    LOOP            shift and go to state 4
    IDENT           shift and go to state 8
    TRUE            shift and go to state 9
    FALSE           shift and go to state 10
    FOR             shift and go to state 11
    LBRACE          shift and go to state 13
    STRING          shift and go to state 14
    WHILE           shift and go to state 15
    CHAR            shift and go to state 16
    DO              shift and go to state 5
    NOT             shift and go to state 17
    PLUS            shift and go to state 6
    MINUS           shift and go to state 7
    BACKSLASH       shift and go to state 18
    LBRACKET        shift and go to state 20
    IF              shift and go to state 21
    STRUCT          shift and go to state 22
    LOCK            shift and go to state 23
    LPAREN          shift and go to state 24
    FUN             shift and go to state 25
    LOCAL           shift and go to state 26
    EXTEND          shift and go to state 27
    THIS            shift and go to state 30
    DOT             shift and go to state 19

    expression                     shift and go to state 169
    assign_expression              shift and go to state 12
    dots                           shift and go to state 28
    member_assign_expression       shift and go to state 29

state 168

    (29) expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    DO              reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    WHILE           reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    RBRACE          reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    SEMICOLON       reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    COMMA           reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    RBRACKET        reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    THEN            reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    RPAREN          reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    LBRACE          reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    IN              reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    ELSE            reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! LT              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! GT              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! LE              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! GE              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! EQS             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! NEQS            [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! AND             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! OR              [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! NAND            [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! NOR             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! IMP             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! XOR             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! LBRACKET        [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! LPAREN          [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> FOR assign_expression SEMICOLON expression SEMICOLON assign_expression DO expression .) ]

    dots                           shift and go to state 50

state 169

    (62) expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . DIVIDE expression
    (10) expression -> expression . LT expression
    (11) expression -> expression . GT expression
    (12) expression -> expression . LE expression
    (13) expression -> expression . GE expression
    (14) expression -> expression . EQS expression
    (15) expression -> expression . NEQS expression
    (16) expression -> expression . EQ expression
    (17) expression -> expression . NEQ expression
    (18) expression -> expression . AND expression
    (19) expression -> expression . OR expression
    (20) expression -> expression . NAND expression
    (21) expression -> expression . NOR expression
    (22) expression -> expression . IMP expression
    (23) expression -> expression . XOR expression
    (55) expression -> expression . LBRACKET expression RBRACKET
    (69) expression -> expression . dots IDENT
    (70) expression -> expression . LPAREN RPAREN
    (71) expression -> expression . LPAREN expr_list RPAREN
    (66) dots -> . DOT
    (67) dots -> . DOT dots

    $end            reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    DO              reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    WHILE           reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RBRACE          reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    COMMA           reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RBRACKET        reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    THEN            reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    RPAREN          reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    LBRACE          reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    IN              reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    ELSE            reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQS             shift and go to state 39
    NEQS            shift and go to state 40
    EQ              shift and go to state 41
    NEQ             shift and go to state 42
    AND             shift and go to state 43
    OR              shift and go to state 44
    NAND            shift and go to state 45
    NOR             shift and go to state 46
    IMP             shift and go to state 47
    XOR             shift and go to state 48
    LBRACKET        shift and go to state 49
    LPAREN          shift and go to state 51
    DOT             shift and go to state 19

  ! PLUS            [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! EQ              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NEQ             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! AND             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! OR              [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NAND            [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! NOR             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! IMP             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! XOR             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LBRACKET        [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! LPAREN          [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]
  ! DOT             [ reduce using rule 62 (expression -> FUN IDENT ident_list DOT DOT DOT RIGHT_ARROW expression .) ]

    dots                           shift and go to state 50
